{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport { FLIGHT_FETCH_REQUEST, FLIGHT_FETCH_SUCCESS, FLIGHT_FETCH_FAIL, FLIGHT_FETCH_RESET, FLIGHT_ADD_REQUEST, FLIGHT_ADD_SUCCESS, FLIGHT_ADD_FAIL, FLIGHT_ADD_RESET, FLIGHT_CANCEL_REQUEST, FLIGHT_CANCEL_SUCCESS, FLIGHT_CANCEL_FAIL, FLIGHT_CANCEL_RESET } from \"../constants/flightConstants\";\n\n// { headers: { Authorization: `Bearer ${token}`} }\nconst token = sessionStorage.getItem(\"jwt_token\");\nexport const getFlights = () => {\n  return dispatch => {\n    dispatch({\n      type: FLIGHT_FETCH_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const url = BASE_API + \"/manager/get_flights\";\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: FLIGHT_FETCH_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: FLIGHT_FETCH_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const cancelFlight = flight_id => {\n  return dispatch => {\n    dispatch({\n      type: FLIGHT_CANCEL_REQUEST\n    });\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const url = BASE_API + \"/manager/cancel_flight/\" + flight_id;\n    axios.delete(url, header).then(response => {\n      dispatch({\n        type: FLIGHT_CANCEL_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: FLIGHT_CANCEL_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"names":["axios","BASE_API","FLIGHT_FETCH_REQUEST","FLIGHT_FETCH_SUCCESS","FLIGHT_FETCH_FAIL","FLIGHT_FETCH_RESET","FLIGHT_ADD_REQUEST","FLIGHT_ADD_SUCCESS","FLIGHT_ADD_FAIL","FLIGHT_ADD_RESET","FLIGHT_CANCEL_REQUEST","FLIGHT_CANCEL_SUCCESS","FLIGHT_CANCEL_FAIL","FLIGHT_CANCEL_RESET","token","sessionStorage","getItem","getFlights","dispatch","type","header","headers","Authorization","url","get","then","response","payload","data","catch","error","cancelFlight","flight_id","delete"],"sources":["E:/Final project/Airline system-frontend - Copy/src/actions/flightActions.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport {\n    FLIGHT_FETCH_REQUEST,\n    FLIGHT_FETCH_SUCCESS,\n    FLIGHT_FETCH_FAIL,\n    FLIGHT_FETCH_RESET,\n    FLIGHT_ADD_REQUEST,\n    FLIGHT_ADD_SUCCESS,\n    FLIGHT_ADD_FAIL,\n    FLIGHT_ADD_RESET,\n    FLIGHT_CANCEL_REQUEST,\n    FLIGHT_CANCEL_SUCCESS,\n    FLIGHT_CANCEL_FAIL,\n    FLIGHT_CANCEL_RESET\n  } from \"../constants/flightConstants\";\n\n  // { headers: { Authorization: `Bearer ${token}`} }\nconst token = sessionStorage.getItem(\"jwt_token\");\n  export const getFlights = () => {\n    return (dispatch) => {\n      dispatch({\n        type: FLIGHT_FETCH_REQUEST,\n      });\n  \n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}`\n        }, \n      };\n      \n      const url = BASE_API+\"/manager/get_flights\";\n      axios\n        .get(url, header)\n        .then((response) => {\n          dispatch({\n            type: FLIGHT_FETCH_SUCCESS,\n            payload: response.data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: FLIGHT_FETCH_FAIL,\n            payload: error,\n          });\n        });\n    };\n  };\n  export const cancelFlight=(flight_id)=>{\n    return (dispatch) => {\n      dispatch({\n        type: FLIGHT_CANCEL_REQUEST,\n      });\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}`\n        },\n      };\n     \n     \n      const url = BASE_API+\"/manager/cancel_flight/\"+flight_id;\n      axios.delete(url, header)\n      .then((response) => {\n        dispatch({\n          type: FLIGHT_CANCEL_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: FLIGHT_CANCEL_FAIL,\n          payload: error,\n        });\n      });\n    }\n  }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SACIC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,EAChBC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,mBAAmB,QACd,8BAA8B;;AAErC;AACF,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;AAC/C,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MACPC,IAAI,EAAEjB;IACR,CAAC,CAAC;IAEF,MAAMkB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAEC,aAAa,EAAG,UAASR,KAAM;MACrE;IACF,CAAC;IAED,MAAMS,GAAG,GAAGtB,QAAQ,GAAC,sBAAsB;IAC3CD,KAAK,CACFwB,GAAG,CAACD,GAAG,EAAEH,MAAM,CAAC,CAChBK,IAAI,CAAEC,QAAQ,IAAK;MAClBR,QAAQ,CAAC;QACPC,IAAI,EAAEhB,oBAAoB;QAC1BwB,OAAO,EAAED,QAAQ,CAACE;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBZ,QAAQ,CAAC;QACPC,IAAI,EAAEf,iBAAiB;QACvBuB,OAAO,EAAEG;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,YAAY,GAAEC,SAAS,IAAG;EACrC,OAAQd,QAAQ,IAAK;IACnBA,QAAQ,CAAC;MACPC,IAAI,EAAET;IACR,CAAC,CAAC;IACF,MAAMU,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAEC,aAAa,EAAG,UAASR,KAAM;MACrE;IACF,CAAC;IAGD,MAAMS,GAAG,GAAGtB,QAAQ,GAAC,yBAAyB,GAAC+B,SAAS;IACxDhC,KAAK,CAACiC,MAAM,CAACV,GAAG,EAAEH,MAAM,CAAC,CACxBK,IAAI,CAAEC,QAAQ,IAAK;MAClBR,QAAQ,CAAC;QACPC,IAAI,EAAER,qBAAqB;QAC3BgB,OAAO,EAAED,QAAQ,CAACE;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBZ,QAAQ,CAAC;QACPC,IAAI,EAAEP,kBAAkB;QACxBe,OAAO,EAAEG;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}