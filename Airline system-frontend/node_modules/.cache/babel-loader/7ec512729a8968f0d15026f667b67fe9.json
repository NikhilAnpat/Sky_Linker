{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport gql from \"graphql-tag\";\nconst FLIGHT_API_BASE_URL = \"http://localhost:8080\";\nconst token = sessionStorage.getItem(\"jwt_token\");\nconst GET_FLIGHTS = gql`query get_flights($fromCity: String!,$toCity: String!, $departureDate: String!) {\n  get_flights(fromCity: $fromCity, toCity: $toCity ,departureDate: $departureDate) {\n    id\n    airlineName\n    airlineNo\n    departureDate\n    arrivalDate\n    fromCity\n    toCity\n    departureTime\n    arrivalTime\n    capacity\n    availableSeats\n    economyFare\n    businessFare\n  }\n}`;\nclass ApiService {\n  fetchFlightById(aid) {\n    return axios.get(BASE_API + \"/customer/select_flight\", {\n      params: {\n        aid: aid\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  editFlight(flight) {\n    return axios.put(BASE_API + \"/manager/update_airline\", flight, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  getBookingsByFlightId(aid) {\n    return axios.get(BASE_API + \"/manager/get_bookings/\" + aid, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  getBookingsByUserId(uid) {\n    return axios.get(BASE_API + '/customer/get_userbookings/' + uid, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  cancelBookingByBookId(bid) {\n    return axios.delete(BASE_API + \"/manager/delete_booking\", {\n      params: {\n        bid: bid\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  addAirline(flight) {\n    return axios.post(BASE_API + \"/admin/add_airline\", flight, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  updateBooking(airlineId) {\n    console.log(airlineId);\n    return axios.put(BASE_API + \"/manager/update_booking/\" + airlineId, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  cancelBookingByUserId(bId) {\n    return axios.delete(BASE_API + '/customer/cancel_ticket', {\n      params: {\n        bId: bId\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  getFlight(from, to, departure) {\n    //console.log(\"in get flight\"+fromCity + \"  \" + toCity + \"  \" + departureDate);\n    return axios.get(BASE_API + \"/search_flight/\" + departure, {\n      params: {\n        fromCity: from,\n        toCity: to\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  getFlightsGraphQL(fromCity, toCity, departureDate) {\n    const response = axios.post(BASE_API + '/graphql', {\n      query: GET_FLIGHTS,\n      variables: {\n        fromCity,\n        toCity,\n        departureDate\n      }\n    });\n    return response.data.data.get_flights;\n  }\n  getAirlineNames() {\n    return axios.get(BASE_API + '/admin/airline_names', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  addCities(cities) {\n    console.log(\"add cities axios\");\n    return axios.put(BASE_API + '/admin/add_city', cities, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","BASE_API","gql","FLIGHT_API_BASE_URL","token","sessionStorage","getItem","GET_FLIGHTS","ApiService","fetchFlightById","aid","get","params","headers","Authorization","editFlight","flight","put","getBookingsByFlightId","getBookingsByUserId","uid","cancelBookingByBookId","bid","delete","addAirline","post","updateBooking","airlineId","console","log","cancelBookingByUserId","bId","getFlight","from","to","departure","fromCity","toCity","getFlightsGraphQL","departureDate","response","query","variables","data","get_flights","getAirlineNames","addCities","cities"],"sources":["E:/Final project/Airline system-frontend - Copy/src/service/FlightAPIService.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport gql from \"graphql-tag\";\n\nconst FLIGHT_API_BASE_URL = \"http://localhost:8080\";\nconst token = sessionStorage.getItem(\"jwt_token\");\n\nconst GET_FLIGHTS = gql`query get_flights($fromCity: String!,$toCity: String!, $departureDate: String!) {\n  get_flights(fromCity: $fromCity, toCity: $toCity ,departureDate: $departureDate) {\n    id\n    airlineName\n    airlineNo\n    departureDate\n    arrivalDate\n    fromCity\n    toCity\n    departureTime\n    arrivalTime\n    capacity\n    availableSeats\n    economyFare\n    businessFare\n  }\n}`\n\nclass ApiService {\n  fetchFlightById(aid) {\n    return axios.get(BASE_API+\"/customer/select_flight\", {\n      params: { aid: aid }, headers: { Authorization: `Bearer ${token}`}\n    });\n  }\n\n  editFlight(flight) {\n    return axios.put(BASE_API+\"/manager/update_airline\", flight, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  getBookingsByFlightId(aid) {\n    return axios.get(BASE_API+\"/manager/get_bookings/\" + aid, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  getBookingsByUserId(uid){\n    return axios.get(BASE_API+'/customer/get_userbookings/' + uid, { headers: { Authorization: `Bearer ${token}`} })\n  }\n\n  cancelBookingByBookId(bid) {\n    return axios.delete(BASE_API+\"/manager/delete_booking\", {\n      params: { bid: bid }, headers: { Authorization: `Bearer ${token}`}\n    });\n  }\n\n  addAirline(flight) {\n    return axios.post(BASE_API+\"/admin/add_airline\", flight, { headers: { Authorization: `Bearer ${token}`} });\n  }\n  updateBooking(airlineId) {\n    console.log(airlineId);\n    return axios.put(BASE_API+\"/manager/update_booking/\" + airlineId, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  cancelBookingByUserId(bId){\n    return axios.delete(BASE_API+'/customer/cancel_ticket' ,{ params: { bId : bId }, headers: { Authorization: `Bearer ${token}`} })\n}\n\n  getFlight(from, to, departure) {\n    //console.log(\"in get flight\"+fromCity + \"  \" + toCity + \"  \" + departureDate);\n    return axios.get(\n      BASE_API+\"/search_flight/\" + departure,\n      {\n        params: {\n          fromCity: from,\n          toCity: to,\n        },\n        headers: { Authorization: `Bearer ${token}`}\n      }\n    );\n  }\n\n  getFlightsGraphQL(fromCity, toCity, departureDate){\n    const response = axios.post(BASE_API+'/graphql', {\n      query: GET_FLIGHTS,\n      variables: {\n        fromCity,\n        toCity,\n        departureDate\n      },\n    });\n    return response.data.data.get_flights;\n  };\n\n  getAirlineNames(){\n    return axios.get(BASE_API+'/admin/airline_names', { headers: { Authorization: `Bearer ${token}`} })\n  }\n  addCities(cities){\n    console.log(\"add cities axios\");\n    return axios.put(BASE_API+'/admin/add_city', cities, { headers: { Authorization: `Bearer ${token}`} })\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}