[{"E:\\Final project\\Airline system-frontend - Copy\\src\\index.js":"1","E:\\Final project\\Airline system-frontend - Copy\\src\\reportWebVitals.js":"2","E:\\Final project\\Airline system-frontend - Copy\\src\\App.js":"3","E:\\Final project\\Airline system-frontend - Copy\\src\\store.js":"4","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SearchFlightScreen.js":"5","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SigninScreen.js":"6","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateFlightScreen.js":"7","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ManagerScreen.js":"8","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateFlightForm.js":"9","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AddManagerScreen.js":"10","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SignupScreen.js":"11","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\CancelFlightScreen.js":"12","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\CancelBookingsScreen.js":"13","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ListFeedbackScreen.js":"14","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowBookingsScreen.js":"15","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateBookingScreen.js":"16","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\GetPassengerListScreen.js":"17","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AddAirlineScreen.js":"18","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\TicketHistoryForCustomerScreen.js":"19","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AboutScreen.js":"20","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\PostFeedbackScreen.js":"21","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\EditProfileScreen.js":"22","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\FinalListPassengerScreen.js":"23","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ContactUsScreen.js":"24","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowFeedbackScreen.js":"25","E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Footer.js":"26","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowUserBookingsScreen.js":"27","E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\AdminReducer.js":"28","E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Navigation.js":"29","E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\userReducers.js":"30","E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\flightReducer.js":"31","E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Header.js":"32","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\ManagerAPIService.js":"33","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\AdminAPIService.js":"34","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\AuthenticationService.js":"35","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\CitiesAPIService.js":"36","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\FlightAPIService.js":"37","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\UserAPIService.js":"38","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\userActions.js":"39","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\flightActions.js":"40","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\AdminActions.js":"41","E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\AdminConstants.js":"42","E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\userConstants.js":"43","E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\flightConstants.js":"44","E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\ApiConstant.js":"45","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\http-common.js":"46"},{"size":609,"mtime":1692291341291,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1692291341350,"results":"49","hashOfConfig":"48"},{"size":3616,"mtime":1692291341193,"results":"50","hashOfConfig":"48"},{"size":770,"mtime":1692291341408,"results":"51","hashOfConfig":"48"},{"size":22039,"mtime":1692291342755,"results":"52","hashOfConfig":"48"},{"size":18646,"mtime":1692291342901,"results":"53","hashOfConfig":"48"},{"size":2169,"mtime":1692291343081,"results":"54","hashOfConfig":"48"},{"size":1689,"mtime":1692291342655,"results":"55","hashOfConfig":"48"},{"size":3437,"mtime":1692291343046,"results":"56","hashOfConfig":"48"},{"size":5063,"mtime":1692291342329,"results":"57","hashOfConfig":"48"},{"size":5311,"mtime":1692291342938,"results":"58","hashOfConfig":"48"},{"size":2200,"mtime":1692291342410,"results":"59","hashOfConfig":"48"},{"size":2159,"mtime":1692291342366,"results":"60","hashOfConfig":"48"},{"size":1801,"mtime":1692291342617,"results":"61","hashOfConfig":"48"},{"size":2549,"mtime":1692291342791,"results":"62","hashOfConfig":"48"},{"size":3116,"mtime":1692291343008,"results":"63","hashOfConfig":"48"},{"size":4430,"mtime":1692291342574,"results":"64","hashOfConfig":"48"},{"size":9281,"mtime":1692291342280,"results":"65","hashOfConfig":"48"},{"size":2391,"mtime":1692291342971,"results":"66","hashOfConfig":"48"},{"size":3484,"mtime":1692291342246,"results":"67","hashOfConfig":"48"},{"size":1572,"mtime":1692291342700,"results":"68","hashOfConfig":"48"},{"size":5825,"mtime":1692291342486,"results":"69","hashOfConfig":"48"},{"size":1950,"mtime":1692291342528,"results":"70","hashOfConfig":"48"},{"size":2011,"mtime":1693400883827,"results":"71","hashOfConfig":"48"},{"size":2167,"mtime":1692291342824,"results":"72","hashOfConfig":"48"},{"size":2131,"mtime":1692291341546,"results":"73","hashOfConfig":"48"},{"size":3887,"mtime":1692291342856,"results":"74","hashOfConfig":"48"},{"size":530,"mtime":1692291342142,"results":"75","hashOfConfig":"48"},{"size":9138,"mtime":1692291341653,"results":"76","hashOfConfig":"48"},{"size":940,"mtime":1692291342209,"results":"77","hashOfConfig":"48"},{"size":1228,"mtime":1692291342178,"results":"78","hashOfConfig":"48"},{"size":194,"mtime":1692291341598,"results":"79","hashOfConfig":"48"},{"size":406,"mtime":1692291343314,"results":"80","hashOfConfig":"48"},{"size":885,"mtime":1692291343127,"results":"81","hashOfConfig":"48"},{"size":1885,"mtime":1692291343168,"results":"82","hashOfConfig":"48"},{"size":263,"mtime":1692291343206,"results":"83","hashOfConfig":"48"},{"size":2864,"mtime":1692291343244,"results":"84","hashOfConfig":"48"},{"size":1052,"mtime":1692291343356,"results":"85","hashOfConfig":"48"},{"size":2621,"mtime":1692291341502,"results":"86","hashOfConfig":"48"},{"size":1861,"mtime":1692291341462,"results":"87","hashOfConfig":"48"},{"size":1083,"mtime":1692291341428,"results":"88","hashOfConfig":"48"},{"size":214,"mtime":1692291341701,"results":"89","hashOfConfig":"48"},{"size":374,"mtime":1692291341830,"results":"90","hashOfConfig":"48"},{"size":669,"mtime":1692291341783,"results":"91","hashOfConfig":"48"},{"size":100,"mtime":1692291341735,"results":"92","hashOfConfig":"48"},{"size":176,"mtime":1692291343279,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"100eud8",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"96"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"E:\\Final project\\Airline system-frontend - Copy\\src\\index.js",[],["215","216"],"E:\\Final project\\Airline system-frontend - Copy\\src\\reportWebVitals.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\App.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\store.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SearchFlightScreen.js",["217","218","219","220"],"import { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport CitiesAPIService from \"../service/CitiesAPIService\";\nimport FlightAPIService from \"../service/FlightAPIService\";\nimport UserAPIService from \"../service/UserAPIService\";\n\nexport default class SearchFlightScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: [],\n      fromcity: \"\",\n      toCity: \"\",\n      departureDate: \"\",\n      noOfPassengers: 0,\n      passengers: [],\n      flights: [],\n      selectedSeatType: \"\",\n      selectedFlight: null,\n      passengerType: \"\",\n      passengerName: \"\",\n      passengerAge: \"\",\n      gender: \"\",\n      seatNumber: \"\",\n      passengerDto: [],\n      way: \"\",\n      baseFare: 0,\n      taxes: 0,\n      totalAmount: 0,\n      nameOnCard: \"\",\n      cardNumber: \"\",\n      expiryDate: \"\",\n      cardDto: {},\n      message: \"\",\n      cvv:0\n    };\n    this.bookTicket = this.bookTicket.bind(this);\n    this.confirmBooking = this.confirmBooking.bind(this);\n  }\n  componentDidMount() {\n    this.loadCities();\n  }\n\n  loadCities() {\n    CitiesAPIService.fetchCities().then((res) => {\n      console.log(res);\n      this.setState({\n        cities: res.data.data,\n      });\n      console.log(this.state.cities);\n    });\n  }\n  \n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n   \n  searchFlight = (e) => {\n    // var today = new Date(),\n    // date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    console.log(\n      \"In clg \" +\n        this.state.fromcity +\n        \" \" +\n        this.state.toCity +\n        \" \" +\n        this.state.departureDate +\n        \"  \" +\n        this.state.selectedType +\n        \" \" +\n        this.state.noOfPassengers\n    );\n    e.preventDefault();\n    console.log(new Date());\n    if(!this.state.fromcity)\n      this.setState({ fromcityError: \"Please Select a City\" });\n    else this.setState({ fromcityError: \"\" });\n    if(this.state.fromcity === this.state.toCity)\n      this.setState({ toCityError: \"Please Select different Cities\" }); \n    else if(!this.state.toCity)\n      this.setState({ toCityError: \"Please Select a City\" }); \n    else this.setState({ toCityError: \"\" });\n\n    if(!this.state.departureDate)\n      this.setState({ departureDateError: \"Please select Journey Date\" });\n    else this.setState({ departureDateError: \"\" });\n\n    if(!this.state.noOfPassengers)\n      this.setState({ noOfPassengersError: \"Please select number of Passengers\" });\n    else this.setState({ noOfPassengersError: \"\" });\n    if(!this.state.selectedSeatType)\n      this.setState({selectedSeatTypeError:\"Please select seat type\"});\n    else this.setState({ selectedSeatTypeError: \"\" });\n    \n    if( !(this.state.fromcity === this.state.toCity) && this.state.fromcity && \n        this.state.toCity && \n        this.state.departureDate &&\n        this.state.noOfPassengers &&\n        this.state.selectedSeatType )  \n    {\n      FlightAPIService.getFlight(\n        this.state.fromcity,\n        this.state.toCity,\n        this.state.departureDate\n      ).then((res) => {\n        console.log(res);\n        this.setState({\n          flights: res.data,\n          passengers: [],\n          selectedFlight: null,\n        });\n        console.log(this.state.flights);\n      });\n    }\n  };\n\n  bookTicket = (aid) => {\n    FlightAPIService.fetchFlightById(aid).then((res) => {\n      console.log(res);\n      this.setState({ selectedFlight: res.data.data, flights: [] });\n      for (let i = 0; i < this.state.noOfPassengers; i++) {\n        this.setState((prevState) => {\n          return {\n            passengers: [...prevState.passengers, i + 1],\n          };\n        });\n      }\n      let baseFare = 0;\n      let taxes = 0;\n      let totalFare = 0;\n      console.log(this.state.selectedSeatType);\n      if (this.state.selectedSeatType == \"ECONOMY\") {\n        baseFare =\n          this.state.selectedFlight.economyFare * this.state.noOfPassengers;\n        taxes = baseFare * 0.18;\n        totalFare = baseFare + taxes;\n      } else {\n        baseFare =\n          this.state.selectedFlight.businessFare * this.state.noOfPassengers;\n        taxes = baseFare * 0.18;\n        totalFare = baseFare + taxes;\n      }\n      this.setState({\n        baseFare: baseFare,\n        taxes: taxes,\n        totalAmount: totalFare,\n      });\n\n      console.log(this.state.selectedFlight);\n      console.log(\"passengers array \" + this.state.passengers);\n    });\n  };\n\n  savePassenger = (i) => {\n    console.log(\"here savepassenger\" + this.state.passengerDto);\n    if(this.state.passengerName.length <0)\n      this.setState({ passengerNameError: \"Please enter Name\" });\n    if(this.state.passengerName.length <3)\n      this.setState({ passengerNameError: \"Please enter a Valid Name\" });\n    else this.setState({ passengerNameError: \"\" });\n    if(!this.state.passengerAge)\n      this.setState({ passengerAgeError: \"Please enter  Age\" });\n    else if(this.state.passengerAge <=0 )\n      this.setState({ passengerAgeError: \"Please enter  Age\" });\n    else this.setState({ passengerAgeError: \"\" });\n    if(!this.state.gender)\n      this.setState({ genderError: \"Please select a gender\" });\n    else this.setState({ genderError: \"\" });\n    \n    if(this.state.passengerName.length >=3 &&\n      this.state.passengerName &&\n      this.state.passengerAge &&\n      this.state.gender\n    )\n    if(this.state.passengerAge <= 17)\n    this.setState({passengerType: \"MINOR\"});\n    else\n    this.setState({passengerType: \"ADULT\"});\n    {\n    console.log(\"in save psgr \"+this.state.passengerName+\" \"+\n    this.state.passengerAge +\" \"+\n    this.state.gender)\n    const passengers = {\n      passengerType: this.state.passengerType,\n      passengerName: this.state.passengerName,\n      passengerAge: this.state.passengerAge,\n      gender: this.state.gender,\n      seatNumber:(this.state.selectedFlight.availableSeats - i),\n    };\n    sessionStorage.setItem(\"passenger\" + i, JSON.stringify(passengers));\n    console.log(this.state.passengerDto);\n    }\n  };\n\n  submitCardDetails = () => {\n    if(!this.state.cardNumber )\n      this.setState({cardNumberError:\"Please enter card number\"})\n    else if(this.state.cardNumber.length >16 )\n      this.setState({cardNumberError:\"Please enter a valid card number\"})\n    else if(this.state.cardNumber.length <16 )\n      this.setState({cardNumberError:\"Please enter a valid card number\"})\n    else this.setState({ cardNumberError: \"\" });\n    \n    if(!this.state.nameOnCard)\n      this.setState({nameOnCardError:\"Please enter Name\"})\n    else this.setState({ nameOnCardError: \"\" });\n\n    if(!this.state.expiryDate)\n      this.setState({expiryDateError:\"Please enter Expiry Date\"})\n    else this.setState({ expiryDateError: \"\" });\n\n    if(!this.state.cvv)\n      this.setState({cvvError :\"Please enter cvv\"})\n    else if(this.state.cvv.length <3)\n      this.setState({cvvError :\"Please enter a Valid cvv\"})\n    else if(this.state.cvv.length >3)\n      this.setState({cvvError :\"Please enter a Valid cvv\"})\n    else this.setState({ cvvError: \"\" });  \n    if(this.state.cardNumber && \n      this.state.cardNumber.length ==16 &&\n      this.state.nameOnCard &&\n      this.state.expiryDate &&\n      this.state.cvv &&\n      this.state.cvv.length ==3)\n    {\n    let card = {\n      cardNumber: this.state.cardNumber,\n      nameOnCard: this.state.nameOnCard,\n      expiryDate: this.state.expiryDate,\n    };\n    sessionStorage.setItem(\"card\", JSON.stringify(card));\n    console.log(card);\n    this.setState({ cardDto: card });\n    console.log(this.state.cardDto);\n    }\n  };\n  \n  confirmBooking = () => {\n    let i = 1;\n    let j = 1;\n    let pass = [];\n    console.log(\"passenger\" + i);\n    console.log(\"no of pass : \" + this.state.noOfPassengers);\n    for (i = 0; i < this.state.noOfPassengers; i++) {\n      let obj = JSON.parse(sessionStorage.getItem(\"passenger\" + j));\n      console.log(obj);\n      pass.push(obj);\n      j++;\n    }\n    console.log(pass);\n\n    let card = JSON.parse(sessionStorage.getItem(\"card\"));\n    console.log(card);\n\n    const booking = {\n      totalFare: this.state.totalAmount,\n      seatType: this.state.selectedSeatType,\n      status: 1,\n      airlineId: this.state.selectedFlight.id,\n    };\n    console.log(booking);\n    const book = {\n      userId: sessionStorage.getItem(\"userid\"),\n      cardDto: card,\n      bookingDto: booking,\n      passengerDto: pass,\n    };\n    console.log(book);\n\n    UserAPIService.bookTicket(book).then((res) => {\n      sessionStorage.removeItem(\"card\");\n      let k = 1;\n      for (let l = 0; l < this.state.noOfPassengers; l++) {\n        sessionStorage.removeItem(\"passenger\" + k);\n        k++;\n      }\n      this.setState({\n        passengers: [],\n        selectedFlight: null,\n        passengerName: \"\",\n        passengerAge: \"\",\n        gender: \"\",\n        message: \"flight booked Successfully\"\n      });\n    });\n  };\n  render() {\n    return (\n      <div class=\"jumbotron1\">\n        <Header title=\"Search Flight\" />\n        <form>\n          <p Style=\"color:green;\">{this.state.message}</p>\n          <div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <label for=\"fromcity\">From</label>\n                <select\n                  id=\"fromcity\"\n                  class=\"form-control\"\n                  name=\"fromcity\"\n                  placeholder=\"select from city\"\n                  onChange={this.onChange}\n                >\n                 <option value=\"from\" hidden selected>From</option>\n                  {this.state.cities.map((city) => {\n                    return <option value={city.city}>{city.city}</option>;\n                  })}\n                </select>\n                <h6 className=\"text-danger text-center my-4\">\n                  {this.state.fromcityError}\n                </h6>\n              </div>\n              <div class=\"col-6\">\n                <label for=\"toCity\">Destination</label>\n                <select\n                  id=\"toCity\"\n                  class=\"form-control\"\n                  name=\"toCity\"\n                  placeholder=\"select from city\"\n                  onChange={this.onChange}\n                >\n                  <option value=\"destination\" hidden selected>Destination</option>\n                  {this.state.cities.map((city) => {\n                    return <option value={city.city}>{city.city}</option>;\n                  })}\n                </select>\n                <h6 className=\"text-danger text-center my-4\">\n                  {this.state.toCityError}\n                </h6>\n              </div>\n            </div>\n            <div class=\"row my-4\">\n              <div class=\"col-6\">\n                <label>Departure Date</label>\n                <input\n                  type=\"date\"\n                  class=\"form-control\"\n                  name=\"departureDate\"\n                  placeholder=\"Departure Date\"\n                  onChange={this.onChange}\n                />\n                <h6 className=\"text-danger text-center my-4\">\n                  {this.state.departureDateError}\n                </h6>\n              </div>\n              <div class=\"col-6\">\n                <label>Passengers</label>\n                <select\n                  id=\"noOfPassengers\"\n                  class=\"form-control\"\n                  name=\"noOfPassengers\"\n                  placeholder=\"select Passengers\"\n                  onChange={this.onChange}\n                >\n                  <option value=\"select\">Select Passengers</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                </select>\n                <h6 className=\"text-danger  text-center my-4\">\n                  {this.state.noOfPassengersError}\n                </h6>\n              </div>\n              <div class=\"col-6 my-4\">\n                <label class=\"\">Type of Seat</label>\n                <select\n                  id=\"selectedType\"\n                  class=\"form-control\"\n                  name=\"selectedSeatType\"\n                  placeholder=\"select Type of Seat\"\n                  onChange={this.onChange}\n                >\n                  <option value=\"select\" hidden selected>Select Type of Seat</option>\n                  <option value=\"ECONOMY\">Economy</option>\n                  <option value=\"BUSINESS\">Business</option>\n                </select>\n                <h6 className=\"text-danger  text-center my-4\">\n                  {this.state.selectedSeatTypeError}\n                </h6>\n              </div>\n            </div>\n            <button  className=\"btn btn-success\" onClick={this.searchFlight}>\n              Search\n            </button>\n          </div>\n        </form>\n        {this.state.flights === \"Currently No Flights Available For this Route\" &&\n          <div className=\"bg-danger text-center my-4\">\"Currently No Flights Available For this Route\"</div>\n        }\n        {this.state.flights !==\"Currently No Flights Available For this Route\" && this.state.flights.length > 0 && (\n          <div className=\"my-4\">\n            <table class=\"table caption-top\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Airline Name</th>\n                  <th scope=\"col\">Airline Number</th>\n                  <th scope=\"col\">From</th>\n                  <th scope=\"col\">To</th>\n                  <th scope=\"col\">Departure Date</th>\n                  <th scope=\"col\">Arrival Date</th>\n                  <th scope=\"col\">Departure Time</th>\n                  <th scope=\"col\">Arrival Time</th>\n                  <th scope=\"col\">Economy Fare</th>\n                  <th scope=\"col\">Business Fare</th>\n                  <th scope=\"col\">Book Flight</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.flights.map((flight) => {\n                  return (\n                    <tr>\n                      <td scope=\"row\">{flight.airlineName}</td>\n                      <td>{flight.airlineNo}</td>\n                      <td>{flight.fromCity}</td>\n                      <td>{flight.toCity}</td>\n                      <td>{flight.departureDate}</td>\n                      <td>{flight.arrivalDate}</td>\n                      <td>{flight.departureTime}</td>\n                      <td>{flight.arrivalTime}</td>\n                      <td>{flight.economyFare}</td>\n                      <td>{flight.businessFare}</td>\n                      <td>\n                        <button\n                          className=\"btn btn-outline-danger \"\n                          onClick={() => {\n                            this.setState({ selectedFlightId: flight.id });\n                            this.bookTicket(flight.id);\n                          }}\n                        >\n                          {\" \"}\n                          Book Flight\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n        {this.state.passengers.length > 0 && (\n          <div class=\"row-6\" Style=\"align-self: center;\">\n            {this.state.passengers.map((i) => {\n              //console.log(i);\n              return (\n                <div class=\"card text-center my-4\" >\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title\">Passenger {i} Details</h6>\n                    {/* <form> */}\n                    <div class=\"row-6\">\n                      <div class=\"col\">\n                        <label>Passenger Name</label>\n                        <input\n                          required\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"passengerName\"\n                          placeholder=\"Passenger Name\"\n                          onChange={this.onChange}\n                        />\n                        <h6 className=\"text-danger text-center my-4\">\n                            {this.state.passengerNameError}</h6>\n                      </div>\n                      <div class=\"col\">\n                        <label>Age</label>\n                        <input\n                          required\n                          type=\"number\"\n                          class=\"form-control\"\n                          placeholder=\"Age\"\n                          name=\"passengerAge\"\n                          onChange={this.onChange}\n                        />\n                        <h6 className=\"text-danger text-center my-4\">\n                            {this.state.passengerAgeError}</h6>\n                      </div>\n                      <div class=\"col\">\n                        <label>Gender</label>\n                        <select\n                          required\n                          class=\"form-control\"\n                          name=\"gender\"\n                          placeholder=\"select \"\n                          onChange={this.onChange}\n                        >\n                          <option value=\"select\" hidden selected>Select Gender</option>\n                          <option value=\"MALE\">MALE</option>\n                          <option value=\"FEMALE\">FEMALE</option>\n                          <option value=\"TRANSGENDER\">TRANSGENDER</option>\n                        </select>\n                        <h6 className=\"text-danger text-center my-4\">\n                            {this.state.genderError}</h6>\n                      </div>\n                    </div>\n                    <button\n                      class=\"btn btn-primary my-4\"\n                      onClick={() => {\n                        this.savePassenger(i);\n                      }}\n                    >\n                      Save\n                    </button>\n                    {/* </form> */}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {this.state.selectedFlight !== null && (\n          <div class=\"row-6\">\n            <div class=\"card text-center my-4 col\">\n              <div class=\"card-header\">Ticket Summary</div>\n              <div class=\"card-body\">\n                <p class=\"card-text\">\n                  Ariline Name: {this.state.selectedFlight.airlineName}\n                </p>\n                <p class=\"card-text\">\n                  Route : {this.state.selectedFlight.fromCity}---\n                  {this.state.selectedFlight.toCity}\n                </p>\n                <p class=\"card-text\">Travellers: {this.state.noOfPassengers}</p>\n                <p class=\"card-text\">Base Fare : {this.state.baseFare}</p>\n                <p class=\"card-text\">Taxes : {this.state.taxes}</p>\n                <p class=\"card-text\">Total Fare: {this.state.totalAmount}</p>\n              </div>\n            </div>\n            <div class=\"card text-center my-4 col\">\n              <div class=\"card-header\">Enter Card Details</div>\n              <div class=\"card-body\">\n                <p class=\"card-text\"></p>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label>Name on Card</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"nameOnCard\"\n                      placeholder=\"nameOnCard\"\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger  text-center my-4\">\n                      {this.state.nameOnCardError}\n                    </h6>  \n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label>Card Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"cardNumber\"\n                      placeholder=\"•••• •••• •••• ••••\" pattern=\"[0-9]{16}\" required\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger  text-center my-4\">\n                      {this.state.cardNumberError}\n                    </h6> \n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label>Expiry Date</label>\n                    <input\n                      type=\"date\"\n                      class=\"form-control\"\n                      name=\"expiryDate\"\n                      placeholder=\"Expiry Date\"\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger  text-center my-4\">\n                      {this.state.expiryDateError}\n                    </h6> \n                  </div>\n                  <div class=\"col\">\n                    <label>CVV</label>\n                    <input\n                      type=\"number\"\n                      class=\"form-control\"\n                      name=\"cvv\"\n                      placeholder=\"CVV\"\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger  text-center my-4\">\n                      {this.state.cvvError}\n                    </h6>\n                  </div>\n                </div>\n                <button\n                  class=\"btn btn-primary\"\n                  onClick={this.submitCardDetails}\n                >\n                  Confirm Booking\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        {this.state.selectedFlight !== null && (\n          <button onClick={this.confirmBooking} class=\"btn btn-info\">\n            Make Payment and Confirm Booking\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SigninScreen.js",["221","222","223","224","225","226","227","228"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { signin } from \"../actions/userActions\";\nimport ReCAPTCHA  from \"react-google-recaptcha\"\nimport CitiesAPIService from \"../service/CitiesAPIService\";\nimport FlightAPIService from \"../service/FlightAPIService\";\nimport Header from \"../components/Header\";\nimport \"../css/welcome.css\"\nimport swal from \"sweetalert\";\nimport AuthenticationService from \"../service/AuthenticationService\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst SigninScreen = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // fromcity: \"\",\n  //     toCity: \"\",\n  //     departureDate: \"\",\n  const [fromcity, setFromcity] = useState(\"\");\n  const [toCity, setTocity] = useState(\"\");\n  const [departureDate, setDepartureDate] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  const [flights, setFlights] = useState([]);\n\n  const [fromcityError, setFromcityError] = useState(\"\")\n  const [toCityError, setToCityError] = useState(\"\")\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [departureDateError, setDepartureDateError] = useState(\"\")\n\n  const userSignin = useSelector((store) => store.userSignin);\n  const { loading, error, response } = userSignin;\n  const [cap, setCap] = useState(true);\n\n  const historyHook = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleonChange=(value)=> {\n    setCap((current) => !current);\n  }\n\n  const loadCities= () =>{\n    CitiesAPIService.fetchCities().then((res) => {\n      console.log(res);\n      // this.setState({\n      //   cities: res.data.data,\n      // });\n      // const arr = [res.data.data]\n      // setCities(arr)\n      setCities(res.data.data)\n      console.log(cities);\n    });\n  }\n\n  const searchFlight = (e) => {\n    // var today = new Date(),\n    // date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    console.log(\n      \"In clg \" +\n        fromcity +\"\"+\n        toCity +\n        \" \" +\n        departureDate\n    );\n    e.preventDefault();\n    console.log(new Date());\n    if(!fromcity)\n    setFromcityError(\"Please Select a City\");\n    else setFromcityError(\"\");\n\n    if(fromcity === toCity)\n      setToCityError(\"Please Select different Cities\");\n    else if(!toCity)\n    setToCityError(\"Please Select a City\" ); \n    else setToCityError(\"\");\n\n    const today = new Date();\n    const selected = new Date(departureDate);\n\n    if(!departureDate)\n      setDepartureDateError(\"Please select Journey Date\" );\n    else if(selected < today.setHours(0,0,0,0))\n      setDepartureDateError(\"Please select a Valid Journey Date\" );\n    else setDepartureDateError(\"\");\n    \n    if( !(fromcity === toCity) && fromcity && \n        toCity && \n        departureDate && selected > today.setHours(0,0,0,0))  \n    {\n      FlightAPIService.getFlight(\n        fromcity,\n        toCity,\n        departureDate\n      ).then((res) => {\n        console.log(res);\n        // this.setState({\n        //   flights: res.data,\n        //   passengers: [],\n        //   selectedFlight: null,\n        // });\n        setFlights(res.data)\n        console.log(flights);\n      });\n      // FlightAPIService.getFlightsGraphQL(\n      //   fromcity,\n      //   toCity,\n      //   departureDate\n      // ).then((res)=>{\n      //     console.log(res);\n      //     // this.setState({\n      //     //   flights: res.data,\n      //     //   passengers: [],\n      //     //   selectedFlight: null,\n      //     // });\n      //     setFlights(res.data)\n      //     console.log(flights);\n      // })\n    }\n  };\n  \n  const onLogin = () => {\n    if (!email) setEmailError(\"Email is required\");\n    else setEmailError(\"\");\n    if (!password) setPasswordError(\"Password Is Required \");\n    else setPasswordError(\"\");\n    AuthenticationService.authenticateUser(email, password)\n    .then((response) => {\n      console.log(\"auth success\", response);\n      AuthenticationService.storeUserDetails(email, response.data.jwt);\n      console.log(\"welcome\");\n      // setlogin(true);\n      // setauthenticated(true);\n      // navigation(`/home/${userName}`);\n    })\n    .catch((error) => {\n      // swal(\"Oops\", \"Wrong username or password\", \"error\");\n      console.log(\"auth failed \", error.message);\n    });\n    if (email && password) dispatch(signin(email, password));\n\n  };\n\n  useEffect(() => {\n    loadCities();\n    if (\n      response &&\n      response.status === \"success\" &&\n      response.data.userRole === \"CUSTOMER\"\n    ) {\n      sessionStorage.setItem(\"user\", response.data);\n      sessionStorage.setItem(\"userid\", response.data.id);\n      sessionStorage.setItem(\"userRole\", response.data.userRole);\n      // props.history.push(\"/customer/search_flight\");\n      historyHook.push(\"/customer/search_flight\");\n      window.location.reload();\n    } else if (\n      response &&\n      response.status === \"success\" &&\n      response.data.userRole === \"MANAGER\"\n    ) {\n      sessionStorage.setItem(\"user\", response.data);\n      sessionStorage.setItem(\"userid\", response.data.id);\n      sessionStorage.setItem(\"userRole\", response.data.userRole);\n      props.history.push(\"/manager\");\n      window.location.reload();\n    } else if (\n      response &&\n      response.status === \"success\" &&\n      response.data.userRole === \"ADMIN\"\n    ) {\n      sessionStorage.setItem(\"user\", response.data);\n      sessionStorage.setItem(\"userid\", response.data.id);\n      sessionStorage.setItem(\"userRole\", response.data.userRole);\n      props.history.push(\"/admin\");\n      window.location.reload();\n    } else if (response && response.status === \"error\") {\n      alert(response.error);\n      // swal(\"Oops\", \"Wrong username or password\", \"error\");\n    } else if (error) {\n      // alert(error);\n      swal(\"Oops\", \"Wrong username or password\", \"error\");\n    }\n  }, [loading, error, response]);\n  return (\n     <div className=\"my-container\"> \n      {/* <Header title=\"Signin\" /> */}\n      <form>\n          {/* <p Style=\"color:green;\">{this.state.message}</p> */}\n          <div>\n            <div class=\"row\">\n              <div class=\"col-4\">\n                <label for=\"fromcity\">From</label>\n                <select\n                  id=\"fromcity\"\n                  class=\"form-control\"\n                  name=\"fromcity\"\n                  placeholder=\"select from city\"\n                  onChange={(e) => {\n                    setFromcity(e.target.value);\n                  }}\n                >\n                 <option value=\"from\" hidden selected>From</option>\n                  {cities.map((city) => {\n                    return <option key={city.id} value={city.city}>{city.city}</option>;\n                  })}\n                </select>\n                <h6 className=\"text-danger text-center my-4\">\n                  {fromcityError}\n                </h6>\n              </div>\n              <div class=\"col-4\">\n                <label for=\"toCity\">Destination</label>\n                <select\n                  id=\"toCity\"\n                  class=\"form-control\"\n                  name=\"toCity\"\n                  placeholder=\"select from city\"\n                  onChange={(e) => {\n                    setTocity(e.target.value);\n                  }}\n                >\n                  <option value=\"destination\" hidden selected>Destination</option>\n                  {cities.map((city) => {\n                    return <option key={city.id} value={city.city}>{city.city}</option>;\n                  })}\n                </select>\n                <h6 className=\"text-danger text-center my-4\">\n                  {toCityError}\n                </h6>\n              </div>\n              <div class=\"col-4\">\n                <label>Departure Date</label>\n                <input\n                  type=\"date\"\n                  class=\"form-control\"\n                  name=\"departureDate\"\n                  placeholder=\"Departure Date\"\n                  onChange={(e) => {\n                    setDepartureDate(e.target.value);\n                  }}\n                />\n                <h6 className=\"text-danger text-center my-4\">\n                  {departureDateError}\n                </h6>\n              </div>\n            </div>\n            {/* <div class=\"row my-4\">\n              \n              <div class=\"col-6\">\n                <label>Passengers</label>\n                <select\n                  id=\"noOfPassengers\"\n                  class=\"form-control\"\n                  name=\"noOfPassengers\"\n                  placeholder=\"select Passengers\"\n                  onChange={this.onChange}\n                >\n                  <option value=\"select\">Select Passengers</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                </select>\n                <h6 className=\"text-danger  text-center my-4\">\n                  {this.state.noOfPassengersError}\n                </h6>\n              </div>\n              <div class=\"col-6 my-4\">\n                <label class=\"\">Type of Seat</label>\n                <select\n                  id=\"selectedType\"\n                  class=\"form-control\"\n                  name=\"selectedSeatType\"\n                  placeholder=\"select Type of Seat\"\n                  onChange={this.onChange}\n                >\n                  <option value=\"select\" hidden selected>Select Type of Seat</option>\n                  <option value=\"ECONOMY\">Economy</option>\n                  <option value=\"BUSINESS\">Business</option>\n                </select>\n                <h6 className=\"text-danger  text-center my-4\">\n                  {this.state.selectedSeatTypeError}\n                </h6>\n              </div>\n            </div> */}\n            <button  className=\"btn btn-success\" onClick={searchFlight}>\n              Search\n            </button>\n          </div>\n        </form>\n        {flights === \"Currently No Flights Available For this Route\" &&\n          <div className=\"text-danger text-center my-4\">Currently No Flights Available For this Route</div>\n        }\n        {flights !==\"Currently No Flights Available For this Route\" && flights.length > 0 && (\n          <div className=\"my-4\">\n            <table class=\"table caption-top\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Airline Name</th>\n                  <th scope=\"col\">Airline Number</th>\n                  <th scope=\"col\">From</th>\n                  <th scope=\"col\">To</th>\n                  <th scope=\"col\">Departure Date</th>\n                  <th scope=\"col\">Arrival Date</th>\n                  <th scope=\"col\">Departure Time</th>\n                  <th scope=\"col\">Arrival Time</th>\n                  <th scope=\"col\">Economy Fare</th>\n                  <th scope=\"col\">Business Fare</th>\n                </tr>\n              </thead>\n              <tbody>\n                {flights.map((flight) => {\n                  return (\n                    <tr key={flight.id}>\n                      <td scope=\"row\">{flight.airlineName}</td>\n                      <td>{flight.airlineNo}</td>\n                      <td>{flight.fromCity}</td>\n                      <td>{flight.toCity}</td>\n                      <td>{flight.departureDate}</td>\n                      <td>{flight.arrivalDate}</td>\n                      <td>{flight.departureTime}</td>\n                      <td>{flight.arrivalTime}</td>\n                      <td>{flight.economyFare}</td>\n                      <td>{flight.businessFare}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      <div id=\"myCarousel\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n          {/* <div className=\"carousel-indicators\">\n            <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n            <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n            <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\n          </div> */}\n          {/* <div className=\"carousel-inner\">\n            <div className=\"carousel-item active\">\n\n              <img src=\"https://customercarelife.com/wp-content/uploads/2019/10/Indian-Airlines.jpg\" width=\"100%\" height=\"100%\" ></img>\n              <div className=\"container\">\n              </div>\n            </div>\n\n            <div className=\"carousel-item\">\n              <img src=\"https://images.unsplash.com/photo-1611610034804-3216fd316c11?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8YWlybGluZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80\" width=\"100%\" height=\"100%\" ></img>\n              <div className=\"container\">\n              </div>\n            </div>\n\n            <div className=\"carousel-item\">\n              <img src=\"https://wallpapercave.com/wp/wp4128843.jpg\" width=\"100%\" height=\"100%\" ></img>\n            </div>\n          </div> */}\n          {/* <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide=\"prev\">\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span className=\"visually-hidden\">Previous</span>\n          </button>\n          <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide=\"next\">\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span className=\"visually-hidden\">Next</span>\n          </button> */}\n          </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6 col-md-6\">\n          <div className=\"login-wrap p-4 p-md-5\">\n            <div className=\"icon d-flex align-items-center justify-content-center\">\n              <span className=\"fa fa-user-o\"></span>\n            </div>\n            <h3 className=\"text-center mb-4\">Have an account?</h3>\n            {/* <form action=\"#\" className=\"login-form\"> */}\n            <div className=\"form-group\">\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"email\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Email\"\n              />\n              <h6 className=\"text-danger text-center my-4\">{emailError}</h6>\n            </div>\n            <div className=\"form-group d-flex\">\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n                className=\"form-control rounded-left my-4\"\n                placeholder=\"Password\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{passwordError}</h6>\n\n            </div>\n           \n            <div><h6 className=\"float-end\">New user<Link to=\"/signup\"><span> register here</span></Link></h6></div><br/>\n\n            {/* <div><ReCAPTCHA\n                    sitekey=\"6LfhMBQiAAAAAAkhQxga6bW9zH9hLd23zHpGSuLe\"\n                    onChange={handleonChange}\n                  /></div> */}\n\n            <div className=\"form-group my-3\">\n              <button\n                onClick={onLogin}\n                disabled={!cap}\n                type=\"submit\"\n                className=\"btn btn-primary rounded submit p-2 px-4\"\n              >\n                Login\n              </button>\n            </div>\n            {/* </form> */}\n          </div>\n          </div>\n          <section>\n          <div class=\"container \">\n\n\n            <div class=\"clearfix\"><br /></div>\n\n            <div class=\"customer-security\">\n              <ul>\n                <li>\n                  <div class=\"img-bg img2\">\n                    <img width='250px' src=\"https://media.istockphoto.com/vectors/insurance-hand-icon-risk-coverage-sign-vector-vector-id1226966972?k=20&m=1226966972&s=612x612&w=0&h=4STddzCaJjYZNagXpw8PS2odwiNXm559OsNHwUMfFhE=\"></img>\n                    <span><b>Why Choose us?</b></span>\n                    <h5><p>Airline Reservation And Management System is a one step solution for all of your air ticket needs. We present exclusive offers or deals on domestic flight tickets. You can avail the enchanting deals via using promo codes, gift coupons and rewards. Apart from affordable flight booking you also get round the clock customer service.</p> </h5>\n                  </div>\n\n                  <div class=\"text-box\">\n\n                  </div>\n                </li>\n                <li>\n                  <div class=\"img-bg img1\">\n                    <img width='250px' src=\"https://cheapestflightsearch.files.wordpress.com/2019/08/cheap-flights.png\"></img>\n                    <span><b>Find Affordable flight ticket</b></span>\n                    <h5><p>Air travel is still a dream for many people and the reason is their small budget. That’s why we try to provide our customers affordable flight tickets. We give exclusive offers and rewards which makes your flight booking affordable. Before booking an air ticket you must check our offers section.</p></h5>\n                  </div>\n                  <div class=\"text-box\">\n\n                  </div>\n                </li>\n                <li>\n                  <div class=\"img-bg img3\">\n                    <img width='250px' src=\"https://png.pngtree.com/png-clipart/20191122/original/pngtree-technical-support-vector-24-7-support-working-online-tech-support-flat-png-image_5189955.jpg\"></img>\n                    <span>&nbsp;&nbsp;&nbsp;<b>24X7 support</b></span>\n                  </div>\n                  <div class=\"text-box\">\n                    <h5> Airline Reservation And Management System has a 24x7 customer support team which resolves all kinds of flight book issues as soon as possible. We value our customers' time. So we try to resolve all our customer queries as soon as possible. To get more information about flight booking or its prices call our expert customer executives.</h5>\n                  </div>\n                </li>\n              </ul>\n\n\n\n            </div>\n\n\n          </div>\n        </section>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default SigninScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateFlightScreen.js",["229","230","231","232"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst UpdateFlightScreen = (props) => {\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n\n  useEffect(() => {\n    dispatch(getFlights());\n  }, []);\n\n  const updateFlight = (id) => {\n    sessionStorage.setItem(\"aid\", id);\n    props.history.push(\"/update_flight_form\");\n  };\n  return (\n    <div>\n      <Header title=\"Scheduled Flights\" />\n      <table class=\"table caption-top\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Airline Name</th>\n            <th scope=\"col\">Airline Number</th>\n            <th scope=\"col\">From</th>\n            <th scope=\"col\">To</th>\n            <th scope=\"col\">Departure Date</th>\n            <th scope=\"col\">Arrival Date</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Arrival Time</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((flight) => {\n              return (\n                <tr>\n                  <td scope=\"row\">{flight.airlineName}</td>\n                  <td>{flight.airlineNo}</td>\n                  <td>{flight.fromCity}</td>\n                  <td>{flight.toCity}</td>\n                  <td>{flight.departureDate}</td>\n                  <td>{flight.arrivalDate}</td>\n                  <td>{flight.departureTime}</td>\n                  <td>{flight.arrivalTime}</td>\n                  <td>\n                    <button\n                      className=\"btn btn-outline-danger \"\n                      onClick={() => updateFlight(flight.id)}\n                    >\n                      {\" \"}\n                      Update Flight Schedule\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UpdateFlightScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ManagerScreen.js",["233","234","235","236"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst ManagerScreen = (props) => {\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n  useEffect(() => {\n    console.log(\"Manager screen use effect called\");\n    dispatch(getFlights());\n  }, []);\n  return (\n    <div>\n      <Header title=\"Scheduled Flights\" />\n      <table class=\"table caption-top\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Airline Name</th>\n            <th scope=\"col\">Airline Number</th>\n            <th scope=\"col\">From</th>\n            <th scope=\"col\">To</th>\n            <th scope=\"col\">Departure Date</th>\n            <th scope=\"col\">Arrival Date</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Arrival Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((flight) => {\n              return(\n              <tr>\n                <td scope=\"row\">{flight.airlineName}</td>\n                <td>{flight.airlineNo}</td>\n                <td>{flight.fromCity}</td>\n                <td>{flight.toCity}</td>\n                <td>{flight.departureDate}</td>\n                <td>{flight.arrivalDate}</td>\n                <td>{flight.departureTime}</td>\n                <td>{flight.arrivalTime}</td>\n              </tr>)\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManagerScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateFlightForm.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AddManagerScreen.js",["237","238","239"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addManager } from \"../actions/AdminActions\";\nimport { ADDMANAGER_RESET } from \"../constants/AdminConstants\";\n\nimport store from \"../store\";\nconst AddManagerScreen = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [status, setStatus] = useState(1);\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [mobileNoError, setMobileNoError] = useState(\"\");\n\n  const AddManager = useSelector((store) => store.addManager);\n  const { loading, error, response } = AddManager;\n\n  const dispatch = useDispatch();\n  const onAddManager = () => {\n    if (!firstName) setFirstNameError(\"First Name required!!!!!!\");\n    else setFirstNameError(\"\");\n    if (!lastName) setLastNameError(\"Last Name required!!!!!!\");\n    else setLastNameError(\"\");\n    if (!email) setEmailError(\"Email required!!!!!!\");\n    else setEmailError(\"\");\n    if (!password) setPasswordError(\"Password required!!!!!!\");\n    else setPasswordError(\"\");\n    if (mobileNo.length < 10)\n      setMobileNoError(\"Mobile number required/enter valid number!!!!!!\");\n    else setMobileNoError(\"\");\n    if (firstName && lastName && email && password && mobileNo.length >= 10) {\n      console.log(mobileNo);\n      dispatch(\n        addManager(firstName, lastName, email, password, mobileNo, status)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (response && response.status === \"success\") {\n      props.history.push(\"/admin\");\n      dispatch({\n        type: ADDMANAGER_RESET,\n      });\n    } else if (response && response.status === \"error\") {\n      alert(\"Appoint Manager failed\");\n    } else if (error) {\n      alert(\"Appoint Manager failed\");\n    }\n  }, [loading, error, response]);\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6 col-lg-5\">\n          <div className=\"login-wrap p-4 p-md-5\">\n            <div className=\"icon d-flex align-items-center justify-content-center\">\n              <span className=\"fa fa-user-o\"></span>\n            </div>\n            <h3 className=\"text-center mb-4\">Add Manager </h3>\n            <div className=\"form-group\">\n              <input\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"First Name\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{firstNameError}</h6>\n            </div>\n            <div className=\"form-group my-2\">\n              <input\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Last Name\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{lastNameError}</h6>\n            </div>\n            <div className=\"form-group my-2\">\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Email\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{emailError}</h6>\n            </div>\n            <div className=\"form-group d-flex my-2\">\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Password\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{passwordError}</h6>\n            </div>\n            <div className=\"form-group d-flex my-2\">\n              <input\n                onChange={(e) => {\n                  setMobileNo(e.target.value);\n                }}\n                type=\"number\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Mobile Number\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{mobileNoError}</h6>\n            </div>\n            <div className=\"form-group my-3\">\n              <button\n                onClick={onAddManager}\n                type=\"submit\"\n                className=\"btn btn-primary rounded submit p-2 px-4\"\n              >\n                add Manager\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddManagerScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\SignupScreen.js",["240","241","242","243"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signup } from \"../actions/userActions\";\n//import Header from \"../components/Header\";\nimport store from \"../store\";\n\nconst SignupScreen = (props) => {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [mobileNo, setMobileNo] = useState('')\n    const [status, setStatus] = useState(1)\n    const [roles, setRoles] = useState([\"ROLE_CUSTOMER\"])\n\n    const [firstNameError, setFirstNameError] = useState(\"\");\n    const [lastNameError, setLastNameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [mobileNoError, setMobileNoError] = useState(\"\");\n\n    const userSignup = useSelector((store) => store.userSignup)\n    const {loading, error, response} = userSignup\n\n    const dispatch = useDispatch()\n    const onSignUp = () => {\n      if(!firstName)\n      setFirstNameError(\"First Name is mandatory!!!\")\n   else\n       setFirstNameError(\"\")\n   \n    if(!lastName)\n       setLastNameError(\"Last Name is mandatory !!!\")\n    else\n        setLastNameError(\"\")\n\n     if(!email)\n       setEmailError(\"Email is required !!!\")\n     else\n       setEmailError(\"\")\n\n     if(!password)\n       setPasswordError(\"Password is required !!!\")\n     else\n       setPasswordError(\"\")\n\n     if(!mobileNo)\n       setMobileNoError(\"Mobile no. is required !!!\")\n     else\n       setMobileNoError(\"\")\n   if(firstName && lastName && email && password && mobileNo)\n     dispatch(signup(firstName, lastName, email, password, mobileNo, status, roles))\n }\n\n    useEffect(()=>{\n        if (response && response.status === 'success') {\n            props.history.push('/signin')\n          } else if (response && response.status === 'error') {\n              console.log(\"here\");\n            alert('User Already Exist, Please login or try with another email')\n          } else if (error) {\n            console.log(\"here\");\n            alert('User Already Exist, Please login or try with another email')\n          }\n        }, [loading, error, response])\n  return (\n    <div>\n      {/* <Header title=\"Signup\" /> */}\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6 col-lg-5\">\n          <div className=\"login-wrap p-4 p-md-5\">\n            <div className=\"icon d-flex align-items-center justify-content-center\">\n              <span className=\"fa fa-user-o\"></span>\n            </div>\n            <h3 className=\"text-center mb-4\">SignUp </h3>\n            {/* <form action=\"#\" className=\"login-form\"> */}\n            <div className=\"form-group\">\n              <input\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"First Name\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{firstNameError}</h6>\n            </div>\n            <div className=\"form-group my-2\">\n              <input\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Last Name\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{lastNameError}</h6>\n            </div>\n            <div className=\"form-group my-2\">\n              <input\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Email\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{emailError}</h6>\n            </div>\n            <div className=\"form-group d-flex my-2\">\n              <input\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Password\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{passwordError}</h6>\n            </div>\n            <div className=\"form-group d-flex my-2\">\n              <input\n                onChange={(e) => {\n                  setMobileNo(e.target.value);\n                }}\n                type=\"number\"\n                className=\"form-control rounded-left\"\n                placeholder=\"Mobile Number\"\n                required=\"\"\n              />\n              <h6 className=\"text-danger text-center\">{mobileNoError}</h6>\n            </div>\n            <div className=\"form-group my-3\">\n              <button\n                onClick={onSignUp}\n                type=\"submit\"\n                className=\"btn btn-primary rounded submit p-2 px-4\"\n              >\n                Signup\n              </button>\n            </div>\n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\CancelFlightScreen.js",["244","245","246","247"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelFlight, getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst CancelFlightScreen = (props) => {\n  const [message , setMessage] = useState('')\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n  useEffect(() => {\n    dispatch(getFlights())\n    \n  }, []);\n  const onCancel=(flight_id)=>{\n      dispatch(cancelFlight(flight_id))\n      if(response.status === 'success'){\n        setMessage('Flight Deleted Successfully')  \n        props.history.push('/manager')   \n      }\n      \n     \n  }\n  return (\n    <div>\n      <Header title=\"Flights List\" />\n      <table class=\"table caption-top\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Airline Name</th>\n            <th scope=\"col\">Airline Number</th>\n            <th scope=\"col\">From</th>\n            <th scope=\"col\">To</th>\n            <th scope=\"col\">Departure Date</th>\n            <th scope=\"col\">Arrival Date</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Arrival Time</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((flight) => {\n              return(\n              <tr>\n                <td scope=\"row\">{flight.airlineName}</td>\n                <td>{flight.airlineNo}</td>\n                <td>{flight.fromCity}</td>\n                <td>{flight.toCity}</td>\n                <td>{flight.departureDate}</td>\n                <td>{flight.arrivalDate}</td>\n                <td>{flight.departureTime}</td>\n                <td>{flight.arrivalTime}</td>\n                <td><button onClick={()=>onCancel(flight.id)} type=\"submit\" className=\"btn btn-primary rounded submit p-2 px-4\">Cancel</button></td>\n              </tr>)\n            })}\n        </tbody>\n      </table>\n      <h6 Style=\"color: red; text-align: center\">{message}</h6>\n    </div>\n  );\n};\n\nexport default CancelFlightScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\CancelBookingsScreen.js",["248","249","250","251"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst CancelBookingScreen = (props) => {\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n\n  useEffect(() => {\n    dispatch(getFlights());\n  }, []);\n\n  const cancelBooking = (id) => {\n    sessionStorage.setItem(\"aid\", id);\n    props.history.push(\"/show_bookings\");\n  };\n  return (\n    <div>\n      <Header title=\"Scheduled Flights\" />\n      <table class=\"table caption-top\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Airline Name</th>\n            <th scope=\"col\">Airline Number</th>\n            <th scope=\"col\">From</th>\n            <th scope=\"col\">To</th>\n            <th scope=\"col\">Departure Date</th>\n            <th scope=\"col\">Arrival Date</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Arrival Time</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((flight) => {\n              return (\n                <tr>\n                  <td scope=\"row\">{flight.airlineName}</td>\n                  <td>{flight.airlineNo}</td>\n                  <td>{flight.fromCity}</td>\n                  <td>{flight.toCity}</td>\n                  <td>{flight.departureDate}</td>\n                  <td>{flight.arrivalDate}</td>\n                  <td>{flight.departureTime}</td>\n                  <td>{flight.arrivalTime}</td>\n                  <td>\n                    <button\n                      className=\"btn btn-outline-danger \"\n                      onClick={() => cancelBooking(flight.id)}\n                    >\n                      {\" \"}\n                      Cancel Booking\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CancelBookingScreen;","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ListFeedbackScreen.js",["252","253"],"import React, { Component } from \"react\";\nimport AdminAPIService from \"../service/AdminAPIService\";\nimport Header from \"../components/Header\";\n\nclass ListFeedBackScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n    };\n    this.reloadFeedbackList = this.reloadFeedbackList.bind(this);\n  }\n  componentDidMount() {\n    this.reloadFeedbackList();\n    console.log(\"in component did mount\");\n  }\n  \n  reloadFeedbackList() {\n      console.log(\"in reloade feedback list\");\n    AdminAPIService.fetchFeedbackByFlightId(\n      window.sessionStorage.getItem(\"airId\")\n    ).then((res) => {\n        console.log(res);\n      if (res.data.status == \"success\"){\n        this.setState({ bookings: res.data.data });\n        window.sessionStorage.removeItem(\"airId\")\n      } \n      else {\n        window.sessionStorage.removeItem(\"airId\")\n        this.props.history.push(\"/admin\");\n      }\n       \n      console.log(this.state.bookings);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Feedback List\" />\n        <table class=\"table caption-top\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Airline ID</th>\n              <th scope=\"col\">Booking ID</th>\n              <th scope=\"col\">User ID</th>\n              <th scope=\"col\">Customer Feedback</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.bookings.map((booking) => (\n              <tr>\n                <td scope=\"row\">{booking.airlineId}</td>\n                <td>{booking.bookingId}</td>\n                <td>{booking.userId}</td>\n                <td>{booking.feedback}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ListFeedBackScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowBookingsScreen.js",["254","255"],"import React, { Component } from \"react\";\nimport FlightAPIService from \"../service/FlightAPIService\";\n\nclass ShowBookingScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n    };\n    this.cancelBooking = this.cancelBooking.bind(this);\n    this.reloadBookingList = this.reloadBookingList.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  reloadBookingList() {\n    FlightAPIService.getBookingsByFlightId(window.sessionStorage.getItem(\"aid\"))\n        .then((res) => {\n          console.log(res);\n          if (res.data.status == \"success\")\n            this.setState({ bookings: res.data.data });\n          else this.props.history.push(\"/manager\");\n          console.log(this.state.bookings);\n    });\n  }\n\n  cancelBooking(bookingId) {\n    FlightAPIService.cancelBookingByBookId(bookingId).then((res) => {\n      this.setState({ message: \"Booking cancelled successfully.\" });\n      this.setState({\n        bookings: this.state.bookings.filter((booking) => booking.bookingId !== bookingId),\n      });\n      if(this.state.bookings==0)\n      this.props.history.push('/manager')\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-center\">Bookings</h2>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th className=\"hidden\">Booking Id</th>\n              <th>Airline Id</th>\n              <th>User Id</th>\n              <th>Booking Date</th>\n              <th>Departure Date</th>\n              <th>Arrival Date</th>\n              <th>Total Fare</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.bookings.map((booking) => (\n              <tr key={booking.bookingId}>\n                <td>{booking.bookingId}</td>\n                <td>{booking.airlineId}</td>\n                <td>{booking.userId}</td>\n                <td>{booking.bookingDate}</td>\n                <td>{booking.journeyDate}</td>\n                <td>{booking.arrivalDate}</td>\n                <td>{booking.totalFare}</td>\n                <td>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => this.cancelBooking(booking.bookingId)}\n                  >\n                    {\" \"}\n                    Cancel Booking\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ShowBookingScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\UpdateBookingScreen.js",["256"],"import React, { Component } from \"react\";\nimport FlightAPIService from \"../service/FlightAPIService\";\n\nclass UpdateBookingScreen extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          airline: [],\n          message: null,\n        };\n        this.updateBooking = this.updateBooking.bind(this);\n    this.reloadAirlineList = this.reloadAirlineList.bind(this);\n      }\n      componentDidMount() {\n        this.reloadAirlineList();\n      }\n      reloadAirlineList() {\n          console.log(window.sessionStorage.getItem(\"aid\"));\n        FlightAPIService.fetchFlightById(window.sessionStorage.getItem(\"aid\"))\n            .then((res) => {\n              console.log(res);\n              if (res.data.status == \"success\")\n                this.setState({ airline: res.data.data });\n              else this.props.history.push(\"/manager\");\n              console.log(this.state.airline);\n        });\n      }\n      updateBooking(aid) {\n        console.log(aid);\n        FlightAPIService.updateBooking(aid).then((res) => {\n          this.setState({ message: \"Bookings updated successfully.\" });\n        //   this.setState({\n        //     bookings: this.state.bookings.filter((booking) => booking.bookingId !== bookingId),\n        //   });\n        // console.log(aid);\n          this.props.history.push('/manager')\n        });\n      }\n      render() {\n        return (\n          <div>\n            <h2 className=\"text-center\">Update Bookings</h2>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th className=\"hidden\">Airline Id</th>\n                  <th>Airline Name</th>\n                  <th>Airline Number</th>\n                  <th>From</th>\n                  <th>To</th>\n                  <th>Departure Date</th>\n                  <th>Arrival Date</th>\n                  <th>Departure Time</th>\n                  <th>Arrival Time</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n          \n                  <tr>\n                    <td>{this.state.airline.id}</td>\n                    <td>{this.state.airline.airlineName}</td>\n                    <td>{this.state.airline.airlineNo}</td>\n                    <td>{this.state.airline.fromCity}</td>\n                    <td>{this.state.airline.toCity}</td>\n                    <td>{this.state.airline.departureDate}</td>\n                    <td>{this.state.airline.arrivalDate}</td>\n                    <td>{this.state.airline.departureTime}</td>\n                    <td>{this.state.airline.arrivalTime}</td> \n                    <td>\n                      <button\n                        className=\"btn btn-success\"\n                        onClick={() => this.updateBooking(this.state.airline.id)}\n                      >\n                        {\" \"}\n                        Update All Bookings\n                      </button>\n                    </td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          </div>\n        );\n      }\n}\nexport default UpdateBookingScreen;","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\GetPassengerListScreen.js",["257","258","259","260","261"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst GetPassengerListScreen = (props) => {\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n  useEffect(() => {\n    dispatch(getFlights());\n  }, []);\n  const getList = (id) => {\n    sessionStorage.setItem(\"airId\", id);\n    props.history.push(\"/list\");\n  };\n\n  return (\n    <div>\n      {/* <Header title=\"Scheduled Flights\" />\n          <table class=\"table caption-top \">\n            <thead>\n              <tr>\n                <th scope=\"col\">Airline Name</th>\n                <th scope=\"col\">Airline Number</th>\n                <th scope=\"col\">From</th>\n                <th scope=\"col\">To</th>\n                <th scope=\"col\">Departure Date</th>\n                <th scope=\"col\">Arrival Date</th>\n                <th scope=\"col\">Departure Time</th>\n                <th scope=\"col\">Arrival Time</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {response &&\n                response.data &&\n                response.data.length > 0 &&\n                response.data.map((flight) => {\n                  return (\n                    <tr>\n                      <td scope=\"row\">{flight.airlineName}</td>\n                      <td>{flight.airlineNo}</td>\n                      <td>{flight.fromCity}</td>\n                      <td>{flight.toCity}</td>\n                      <td>{flight.departureDate}</td>\n                      <td>{flight.arrivalDate}</td>\n                      <td>{flight.departureTime}</td>\n                      <td>{flight.arrivalTime}</td>\n                      <td>\n                        <button\n                          className=\"btn btn-outline-danger \"\n                          onClick={() => getList(flight.id)}\n                        >\n                          {\" \"}\n                           Get List\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table> */}\n      <section class=\"content-info\">\n        <div class=\"container paddings-mini\">\n          <div class=\"row card-table table\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 \">\n              <table class=\"table table-responsive table-hover result-point\">\n                <thead class=\"point-table-head\">\n                  <tr>\n                    <th class=\"text-left\">Airline Name</th>\n                    <th class=\"text-left\">Airline Number</th>\n                    <th class=\"text-center\">From</th>\n                    <th class=\"text-center\">To</th>\n                    <th class=\"text-center\">Departure Date</th>\n                    <th class=\"text-center\">Arrival Date</th>\n                    <th class=\"text-center\">Departure Time</th>\n                    <th class=\"text-center\">Arrival Time</th>\n                    <th class=\"text-center\">Action</th>\n                   \n                  </tr>\n                </thead>\n                <tbody class=\"text-center\">\n                {response &&\n                response.data &&\n                response.data.length > 0 &&\n                response.data.map((flight) => {\n                  return (\n                  <tr>\n                    <td scope=\"row\">{flight.airlineName}</td>\n                      <td>{flight.airlineNo}</td>\n                      <td>{flight.fromCity}</td>\n                      <td>{flight.toCity}</td>\n                      <td>{flight.departureDate}</td>\n                      <td>{flight.arrivalDate}</td>\n                      <td>{flight.departureTime}</td>\n                      <td>{flight.arrivalTime}</td>\n                      <td>\n                        <button\n                          className=\"btn btn-outline-danger \"\n                          onClick={() => getList(flight.id)}\n                        >\n                          {\" \"}\n                           Get List\n                        </button>\n                      </td>\n                  </tr>\n                  )})}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default GetPassengerListScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AddAirlineScreen.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\TicketHistoryForCustomerScreen.js",["262","263","264"],"import React, { Component } from \"react\";\nimport UserAPIService from \"../service/UserAPIService\";\nexport default class TicketHistoryForCustomerScreen extends Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n    };\n    this.reloadBookingList = this.reloadBookingList.bind(this);\n  }\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  reloadBookingList() {\n    UserAPIService.getbookingsByUserId(window.sessionStorage.getItem(\"userid\"))\n        .then((res) => {\n          console.log(res);\n          if (res.data.status == \"success\")\n            this.setState({ bookings: res.data.data });\n          else this.props.history.push(\"/customer/search_flight\");\n          console.log(this.state.bookings);\n    });\n  }\n  postFeedback(bookingId){\n      sessionStorage.setItem('bid', bookingId);\n      this.props.history.push('/post_Customer_Feedback');\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-center\">Bookings</h2>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th className=\"hidden\">Booking Id</th>\n              <th>Airline Id</th>\n              <th>User Id</th>\n              <th>Booking Date</th>\n              <th>Departure Date</th>\n              <th>Arrival Date</th>\n              <th>Total Fare</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.bookings.map((booking) => (\n              <tr key={booking.bookingId}>\n                <td>{booking.bookingId}</td>\n                <td>{booking.airlineId}</td>\n                <td>{booking.userId}</td>\n                <td>{booking.bookingDate}</td>\n                <td>{booking.journeyDate}</td>\n                <td>{booking.arrivalDate}</td>\n                <td>{booking.totalFare}</td>\n                {booking.status==1 && <td>Active</td>}\n                {booking.status==0 && <td>Cancelled</td>}\n\n                <td>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => this.postFeedback(booking.bookingId)}\n                  >\n                    {\" \"}\n                    Post feedback\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\AboutScreen.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\PostFeedbackScreen.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\EditProfileScreen.js",["265","266","267","268"],"import { Component } from \"react\";\nimport UserAPIService from \"../service/UserAPIService\";\n\nexport default class EditProfileScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      mobileNo: \"\",\n    };\n    this.loadUser = this.loadUser.bind(this);\n  }\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  loadUser() {\n    UserAPIService.fetchUserById(window.sessionStorage.getItem(\"userid\")).then(\n      (res) => {\n        let user = res.data.data;\n        console.log(user.firstName);\n        this.setState({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          password: user.password,\n          mobileNo: user.mobileNo,\n          status: user.status,\n          passwordError: \"\",\n          mobileNoError: \"\",\n        });\n      }\n    );\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  saveUser = (e) => {\n    e.preventDefault();\n    if (this.state.password.length < 5)\n      this.setState({ passwordError: \"Enter a valid Password\" });\n    else this.setState({ passwordError: \"\" });\n    if (!this.state.mobileNo)\n      this.setState({ mobileNoError: \"Please enter mobile number\" });\n    else this.setState({ mobileNoError: \"\" });\n    if (this.state.password && this.state.mobileNo) {\n      let user = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n        mobileNo: this.state.mobileNo,\n        status: this.state.status,\n      };\n      UserAPIService.editUser(\n        user,\n        window.sessionStorage.getItem(\"userid\")\n      ).then((res) => {\n        this.setState({ message: \"Profile Updated Successfully\" });\n        if (sessionStorage.getItem(\"userRole\") == \"ADMIN\")\n          this.props.history.push(\"/admin\");\n        if (sessionStorage.getItem(\"userRole\") == \"MANAGER\")\n          this.props.history.push(\"/manager\");\n        if (sessionStorage.getItem(\"userRole\") == \"CUSTOMER\")\n          this.props.history.push(\"/customer\");\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div class=\"container rounded mt-5 mb-5\">\n          <div class=\"row\">\n            <div class=\"col-md-3 border-right\">\n              <div class=\"d-flex flex-column align-items-center text-center p-3 py-5\">\n                <img\n                  class=\"rounded-circle mt-5\"\n                  width=\"150px\"\n                  src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"\n                />\n              </div>\n            </div>\n            <div class=\"col-md-5 border-right\">\n              <div class=\"p-3 py-5\">\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                  <h4 class=\"text-right\">Edit Profile</h4>\n                </div>\n                <div class=\"row mt-2\">\n                  <div class=\"col-md-6\">\n                    <label>First Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"firstName\"\n                      name=\"firstName\"\n                      className=\"form-control\"\n                      readonly=\"true\"\n                      defaultValue={this.state.firstName}\n                    />\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label>Last Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"lastName\"\n                      name=\"lastName\"\n                      className=\"form-control\"\n                      readonly=\"true\"\n                      value={this.state.lastName}\n                    />\n                  </div>\n                </div>\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-12\">\n                    <label>Email</label>\n                    <input\n                      placeholder=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      readonly=\"true\"\n                      value={this.state.email}\n                    />\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label class=\"labels\">Password</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger text-center my-4\">\n                      {this.state.passwordError}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label className=\"labels\">Mobile Number</label>\n                    <input\n                      type=\"number\"\n                      placeholder=\"mobileNo\"\n                      name=\"mobileNo\"\n                      className=\"form-control\"\n                      value={this.state.mobileNo}\n                      onChange={this.onChange}\n                    />\n                    <h6 className=\"text-danger text-center my-4\">\n                      {this.state.mobileNoError}\n                    </h6>\n                  </div>\n                </div>\n                <div class=\"mt-5 text-center\">\n                  <button class=\"btn btn-primary profile-button\" type=\"button\"  onClick={this.saveUser}>\n                    Save Profile\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\FinalListPassengerScreen.js",["269","270"],"import React, { Component } from \"react\";\nimport ManagerAPIService from \"../service/ManagerAPIService\";\nimport Header from \"../components/Header\";\n\nclass FinalListPassengerScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      passengers: [],\n      message: null,\n    };\n    this.reloadPassengerList = this.reloadPassengerList.bind(this);\n  }\n  componentDidMount() {\n    this.reloadPassengerList();\n  }\n  reloadPassengerList() {\n    ManagerAPIService.fetchPassengersByFlightId(\n      window.sessionStorage.getItem(\"airId\")\n    ).then((res) => {\n      if (res.data.status == \"success\")\n        this.setState({ passengers: res.data.data });\n        else{ alert(\"No Passengers are added to this airline\");\n       this.props.history.push(\"/passenger_list\");\n      }\n      console.log(this.state.passengers);\n      // this.check()\n    });\n  }\n  //  check=()=>{\n  //   if(this.status ==1)\n  //    this.history.props('/admin')\n  // }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Passenger List\" />\n        <table\n          class=\"table caption-top table-striped table-responsive table-hover result-point\"\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">Passenger Name</th>\n              <th scope=\"col\">Age</th>\n              <th scope=\"col\">Passenger Type</th>\n              <th scope=\"col\">Seat Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* {this.state.passengers==0 && <a href='/admin'>Go to previous page</a>} */}\n            {this.state.passengers.map((passenger) => (\n              <tr>\n                <td scope=\"row\">{passenger.passengerName}</td>\n                <td>{passenger.passengerAge}</td>\n                <td>{passenger.gender}</td>\n                <td>{passenger.seatNumber}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FinalListPassengerScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ContactUsScreen.js",["271","272"],"E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowFeedbackScreen.js",["273","274","275","276"],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFlights } from \"../actions/flightActions\";\nimport Header from \"../components/Header\";\n\nconst ShowFeedbackScreen = (props) => {\n  const dispatch = useDispatch();\n  const flights = useSelector((store) => store.fetchFlight);\n  const { loading, error, response } = flights;\n\n  useEffect(() => {\n    dispatch(getFlights());\n  }, []);\n\n  const listFeedbacks = (airId) => {\n    sessionStorage.setItem(\"airId\", airId);\n    props.history.push(\"/feedback_list\");\n  };\n  return (\n    <div>\n      <Header title=\"Scheduled Flights\" />\n      <table class=\"table caption-top\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Airline Name</th>\n            <th scope=\"col\">Airline Number</th>\n            <th scope=\"col\">From</th>\n            <th scope=\"col\">To</th>\n            <th scope=\"col\">Departure Date</th>\n            <th scope=\"col\">Arrival Date</th>\n            <th scope=\"col\">Departure Time</th>\n            <th scope=\"col\">Arrival Time</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {response &&\n            response.data &&\n            response.data.length > 0 &&\n            response.data.map((flight) => {\n              return (\n                <tr>\n                  <td scope=\"row\">{flight.airlineName}</td>\n                  <td>{flight.airlineNo}</td>\n                  <td>{flight.fromCity}</td>\n                  <td>{flight.toCity}</td>\n                  <td>{flight.departureDate}</td>\n                  <td>{flight.arrivalDate}</td>\n                  <td>{flight.departureTime}</td>\n                  <td>{flight.arrivalTime}</td>\n                  <td>\n                    <button\n                      className=\"btn btn-outline-primary \"\n                      onClick={() => listFeedbacks(flight.id)}\n                    >\n                      {\" \"}\n                      Show FeedBacks\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ShowFeedbackScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Footer.js",["277","278"],"import { Link } from 'react-router-dom'\nimport '../css/footer.css'\n\nconst Footer = () => {\n  return (\n\n    <div>\n      <div >\n\n        <div className=\"footer-dark\">\n\n          <footer>\n            <section class=\"\">\n              <div className=\"row\">\n           \n                {/* <div className=\"col-sm-6 col-md-3 item\">\n                <div className=\"footermid\">\n                <h3>About Us</h3>\n                 <ul>\n                 <li><Link  className=\"head\" to=\"/aboutUs\">About Us </Link></li>\n                 <li><Link  className=\"head\" to=\"/contactUs\">Contact US </Link></li>\n                 </ul>\n             </div>\n            </div> */}\n                <div className=\"col-md-12 item text \">\n                  <div className=\"footerlast\">\n                    <h2  >ARS</h2>\n                    <p className=\"head\">ARS is a one step solution for all of your air ticket needs. Apart from affordable flight booking you also get round the clock customer service.</p>\n                  </div>\n                </div>\n\n                {/* <div className=\"col item social\"><a href=\"#\"><i className=\"icon ion-social-facebook\"></i></a><a href=\"#\"><i className=\"icon ion-social-twitter\"></i></a><a href=\"#\"><i className=\"icon ion-social-instagram\"></i></a>\n\n                </div> */}\n              </div>\n            </section>\n            <div className=\"col-12 col-md-12 text-center\">\n              <img src=\"https://www.travolook.in/images/cardshm.jpg\" ></img>\n            </div>\n\n            <p className=\"copyright\"><b>@AirLineReservation&ManagementSystem 2023 All Rights Reserved</b></p>\n          </footer>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Footer\n\n// const Footer = (props) => {\n//   return (\n//     <div>\n//       <footer class=\"footer mt-auto  bg-light\">\n//         <div class=\"container1\" Style=\"text-align: center; background-color: #fcdcdc;\">\n//           <span class=\"text-muted\">@AirLineReservationSystem 2022 All Rights Reserved</span>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// Footer.defaultProps = {\n//   title: \" \",\n// };\n\n// export default Footer;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\screens\\ShowUserBookingsScreen.js",["279","280"],"import React, { Component } from \"react\";\nimport FlightAPIService from \"../service/FlightAPIService\";\nimport Modal from \"react-modal\";\n\n\nclass ShowUserBookingScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n      Open: false,\n\n\n    };\n    this.cancelBooking = this.cancelBooking.bind(this);\n    this.reloadBookingList = this.reloadBookingList.bind(this);\n    this.onClickButton=this.onClickButton.bind(this);\n    this.onCancelModal=this.onCancelModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  reloadBookingList() {\n    FlightAPIService.getBookingsByUserId(window.sessionStorage.getItem(\"userid\"))\n        .then((res) => {\n          console.log(res);\n          if (res.data.status == \"success\")\n            this.setState({ bookings: res.data.data });\n          else this.props.history.push(\"/customer/search_flight\");\n          console.log(this.state.bookings);\n    });\n  }\n\n  cancelBooking(bookingId) {\n    FlightAPIService.cancelBookingByUserId(bookingId).then((res) => {\n      this.setState({Open: false});\n      this.setState({ message: \"Booking cancelled successfully.\" });\n      this.setState({\n        bookings: this.state.bookings.filter((booking) => booking.bookingId !== bookingId),\n       \n      });\n     \n      if(this.state.bookings==0)\n      this.props.history.push('/customer/search_flight')\n    });\n  }\n  onClickButton=()=>{\n    this.setState({Open: true})\n  }\n  onCancelModal=()=>{\n    this.setState({Open: false})\n  }\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-center\">Bookings</h2>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Booking Id</th>\n              <th>Airline Id</th>\n              <th>User Id</th>\n              <th>Booking Date</th>\n              <th>Departure Date</th>\n              <th>Arrival Date</th>\n              <th>Total Fare</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.bookings.map((booking) => (\n              <tr key={booking.bookingId}>\n                <td>{booking.bookingId}</td>\n                <td>{booking.airlineId}</td>\n                <td>{booking.userId}</td>\n                <td>{booking.bookingDate}</td>\n                <td>{booking.journeyDate}</td>\n                <td>{booking.arrivalDate}</td>\n                <td>{booking.totalFare}</td>\n                <td>\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={() => this.onClickButton()}\n                  >\n                    {\" \"}\n                    Cancel Booking\n                  </button>\n                  <Modal isOpen = {this.state.Open} \n                 \n                  style={\n                    {\n                      overlay: {\n                       \n                        backgroundColor: 'grey'\n                      },\n                      content: {\n                        paddingTop: \"200px\",\n                        textAlign: \"center\"\n                      }\n                    }\n                  }>\n                    <h1>Refund Details</h1> \n                    <br/>\n                    <h4>Refund Amount Of : {booking.totalFare/2} will be Initiated Shortly</h4>\n                    <br/>                    \n                    <h4>Are You Sure You Want To Cancel Your booking</h4>\n                    <br/>\n                    <button className=\"btn btn-success mx-3\" onClick={this.onCancelModal}> No </button>\n\n                    <button className=\"btn btn-danger\" onClick={()=>this.cancelBooking(booking.bookingId)}> Yes </button>\n                  </Modal>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ShowUserBookingScreen;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\AdminReducer.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Navigation.js",["281","282","283","284","285","286","287","288","289","290"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\nimport { useEffect, useState } from \"react\";\n\nconst Navigation = (props) => {\n  const dispatch = useDispatch();\n  const userSignin = useSelector((store) => store.userSignin);\n  // const userSignin = useSelector((store) => store.userSignin);\n  const { loading, error, response } = userSignin;\n  // const role = sessionStorage.getItem(\"userRole\");\n  const [role,SetRole] = useState(sessionStorage.getItem(\"userRole\"));\n\n  const onLogout = () => {\n    dispatch(logout());\n    window.sessionStorage.removeItem(\"user\");\n    window.sessionStorage.removeItem(\"userid\");\n    window.sessionStorage.removeItem(\"userRole\");\n    window.sessionStorage.removeItem(\"jwt_token\");\n    props.history.push(\"/signin\");\n  };\n\n  useEffect(() => {\n    console.log(\"Manager screen use effect called\");\n\n    // dispatch(getFlights());\n  }, [role]);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n        Airline Reservation System\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            {!sessionStorage.getItem(\"userRole\") && (\n            <li className=\"nav-item\">\n              <Link to=\"/\">\n                <span className=\"nav-link\">Home</span>\n              </Link>\n            </li>)}\n            {sessionStorage.getItem(\"userRole\") == \"CUSTOMER\" && (\n            <li className=\"nav-item\">\n              <Link to=\"/customer/search_flight\">\n                <span className=\"nav-link\">Home</span>\n              </Link>\n            </li>)}\n            {sessionStorage.getItem(\"userRole\") == \"MANAGER\" && (\n            <li className=\"nav-item\">\n              <Link to=\"/manager\">\n                <span className=\"nav-link\">Home</span>\n              </Link>\n            </li>)}\n            {sessionStorage.getItem(\"userRole\") == \"ADMIN\" && (\n            <li className=\"nav-item\">\n              <Link to=\"/admin\">\n                <span className=\"nav-link\">Home</span>\n              </Link>\n            </li>)}\n\n            <li className=\"nav-item\">\n              <Link to=\"/contactUs\">\n                <span className=\"nav-link\">Contact Us</span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\">\n                <span className=\"nav-link\">About</span>\n              </Link>\n            </li>\n            \n            {!sessionStorage.getItem(\"userRole\") && (\n              <li className=\"nav-item\">\n                <Link to=\"/signup\">\n                  <span className=\"nav-link\">Signup</span>\n                </Link>\n              </li>\n            )}\n            {userSignin.response && (\n              <li className=\"nav-item\">\n                <Link to=\"/edit_profile\">\n                  <span className=\"nav-link\">Edit Profile</span>\n                </Link>\n              </li>\n            )}\n          </ul>\n          {sessionStorage.getItem(\"userRole\") == \"MANAGER\" && (\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarNavDarkDropdown\"\n            >\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item dropdown\">\n                  <span\n                    className=\"nav-link dropdown-toggle\"\n                    href=\"#\"\n                    id=\"navbarDarkDropdownMenuLink\"\n                    role=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Manager Actions\n                  </span>\n                  <ul\n                    className=\"dropdown-menu dropdown-menu-light\"\n                    aria-labelledby=\"navbarDarkDropdownMenuLink\"\n                  >\n                    <li>\n                      <Link to=\"/update_flight\">\n                        <span className=\"dropdown-item\">\n                          Update Flight Schedule\n                        </span>\n                      </Link>\n                    </li>\n\n                    <li>\n                      <Link to=\"/cancel_flight\">\n                        <span className=\"dropdown-item\">Cancel Flight</span>\n                      </Link>\n                    </li>\n\n                    {/* <li>\n                      <Link to=\"/cancel_booking\">\n                        <span className=\"dropdown-item\">Cancel Booking</span>\n                      </Link>\n                    </li> */}\n                      <Link to=\"/add_airline\">\n                          <span className=\"dropdown-item\" href=\"#\">\n                            Add Flight\n                          </span>\n                      </Link>\n                    <li>\n                      <Link to=\"/passenger_list\">\n                        <span className=\"dropdown-item\">Passenger List</span>\n                      </Link>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          )}\n          {sessionStorage.getItem(\"userRole\") == \"ADMIN\" && (\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarNavDarkDropdown\"\n              >\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item dropdown\">\n                    <span\n                      className=\"nav-link dropdown-toggle\"\n                      href=\"#\"\n                      id=\"navbarDarkDropdownMenuLink\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Admin Actions\n                    </span>\n                    <ul\n                      className=\"dropdown-menu dropdown-menu-light\"\n                      aria-labelledby=\"navbarDarkDropdownMenuLink\"\n                    >\n                      <li>\n                        <Link to=\"/add_manager\">\n                          <span className=\"dropdown-item\" href=\"#\">\n                            Add Manager\n                          </span>\n                        </Link>\n                      </li>\n                      {/* <li>\n                        <Link to=\"/add_airline\">\n                          <span className=\"dropdown-item\" href=\"#\">\n                            Add Airline\n                          </span>\n                        </Link>\n                      </li> */}\n                      <li>\n                        <Link to=\"/show_feedback\">\n                          <span className=\"dropdown-item\" href=\"#\">\n                            Show Feedbacks\n                          </span>\n                        </Link>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            )}\n          {sessionStorage.getItem(\"userRole\") == \"CUSTOMER\" && (\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarNavDarkDropdown\"\n              >\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item dropdown\">\n                    <span\n                      className=\"nav-link dropdown-toggle\"\n                      href=\"#\"\n                      id=\"navbarDarkDropdownMenuLink\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Other Options\n                    </span>\n                    <ul\n                      className=\"dropdown-menu dropdown-menu-light\"\n                      aria-labelledby=\"navbarDarkDropdownMenuLink\"\n                    >\n                      <li>\n                      <Link to = \"/show_userbookings\">\n                        <span className=\"dropdown-item\" href=\"#\">\n                          Cancel Booking\n                        </span>\n                      </Link>\n                      </li>\n                      <li>\n                        <Link to=\"/customer_showBookings\">\n                          <span className=\"dropdown-item\" href=\"#\">\n                            Booking History\n                          </span>\n                        </Link>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            )}\n        </div>\n        {sessionStorage.getItem(\"userRole\") && (\n          <div className=\"d-flex\">\n            <button onClick={onLogout} className=\"btn btn-outline-danger\">\n              Logout\n            </button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\userReducers.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\reducers\\flightReducer.js",["291","292","293","294"],"import {\n  FLIGHT_FETCH_REQUEST,\n  FLIGHT_FETCH_SUCCESS,\n  FLIGHT_FETCH_FAIL,\n  FLIGHT_FETCH_RESET,\n  FLIGHT_ADD_REQUEST,\n  FLIGHT_ADD_SUCCESS,\n  FLIGHT_ADD_FAIL,\n  FLIGHT_ADD_RESET,\n  FLIGHT_CANCEL_REQUEST,\n  FLIGHT_CANCEL_SUCCESS,\n  FLIGHT_CANCEL_FAIL,\n  FLIGHT_CANCEL_RESET\n} from \"../constants/flightConstants\";\n\nexport const fetchFlightsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case FLIGHT_FETCH_REQUEST :\n            return {loading : true}\n        case FLIGHT_FETCH_SUCCESS:\n            return {loading : false, response: action.payload}\n        case FLIGHT_FETCH_FAIL:\n            return {loading : false, error: action.payload}\n        case FLIGHT_FETCH_RESET:\n            return {}\n        default:\n            return state\n    }\n}\nexport const cancelFlightReducer = (state = {}, action) => {\n    switch(action.type) {\n        case FLIGHT_CANCEL_REQUEST :\n            return {loading : true}\n        case FLIGHT_CANCEL_SUCCESS:\n            return {loading : false, response: action.payload}\n        case FLIGHT_CANCEL_FAIL:\n            return {loading : false, error: action.payload}\n        case FLIGHT_CANCEL_RESET:\n            return {}\n        default:\n            return state\n    }\n}","E:\\Final project\\Airline system-frontend - Copy\\src\\components\\Header.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\service\\ManagerAPIService.js",["295","296"],"import axios from 'axios';\nimport { BASE_API } from '../constants/ApiConstant';\nconst MANAGER_API_BASE_URL = 'http://localhost:8080';\nconst token = sessionStorage.getItem(\"jwt_token\");\n\nclass ApiService{\n    fetchPassengersByFlightId(airId) {\n        return axios.get(BASE_API+'/manager/passenger_list/' + airId , { headers: { Authorization: `Bearer ${token}`} });\n    }\n}\n\nexport default new ApiService();","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\AdminAPIService.js",["297","298","299"],"import axios from 'axios';\nimport qs from 'qs';\nimport { BASE_API } from '../constants/ApiConstant';\nconst SUPERADMIN_API_BASE_URL = 'http://localhost:8080';\n\nconst token = sessionStorage.getItem(\"jwt_token\");\n\nclass ApiService{\n    fetchFeedbackByFlightId(airId) {\n        return axios.get(BASE_API+'/admin/feedback', { params: { airId : airId },headers: { Authorization: `Bearer ${token}`} } );\n    }\n   \n    getTotalBookings(){\n        return axios.get(BASE_API+'/admin/get_total_bookings', { headers: { Authorization: `Bearer ${token}`} });\n    }\n    getCancelledBookings(){\n        return axios.get(BASE_API+'/admin/get_cancelled_bookings', { headers: { Authorization: `Bearer ${token}`} }); \n    }\n    getAirlineRevenue(){\n        return axios.get(BASE_API+'/admin/get_airline_revenue', { headers: { Authorization: `Bearer ${token}`} });\n    }\n}\n\nexport default new ApiService();","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\AuthenticationService.js",["300","301"],"import axios from 'axios';\r\n// import http from '../http-common';\r\nimport http from '../service/http-common'\r\n\r\n\r\n\r\n\r\n    const authenticateUser = (userName, pwd) => {\r\n      //make api call for auth\r\n      console.log('auth call', userName, pwd);\r\n      return http.post(`http://localhost:8080/api/signin` , {\r\n        email: userName,\r\n        password: pwd,\r\n      });\r\n    }\r\n    const storeUserDetails = (userName, jwt) => {\r\n      sessionStorage.setItem('jwt_token', jwt);\r\n      // console.log('add user');\r\n      sessionStorage.setItem('user_dtls', userName);\r\n      //since user has logged in : now for every request to the backend : add req auth interceptor\r\n      // setupRequestInterceptor(jwt);\r\n      //user has logged in successfully : so add it's details under session storage\r\n      // sessionStorage.setItem('user_dtls', userName);\r\n      // sessionStorage.setItem('user_key', jwt);\r\n    }\r\n    const removeUserDetails = () => {\r\n      console.log('rem user');\r\n      sessionStorage.removeItem('user_dtls');\r\n      // sessionStorage.removeItem('user_key');\r\n    }\r\n    const isUserLoggedIn = () => {\r\n      console.log('chk user');\r\n      return sessionStorage.getItem('user_dtls') === null ? false : true;\r\n    }\r\n    const getUserName = () => {\r\n      return sessionStorage.getItem('user_dtls');\r\n    }\r\n  \r\n    //set up axios request interceptor for JWT\r\n    const setupRequestInterceptor = (jwt) => {\r\n      //  const basicAuth = 'Basic ' + window.btoa(userName + ':' + password);\r\n      axios.interceptors.request.use((config) => {\r\n        if (isUserLoggedIn()) {\r\n          //adding the authorization header to config\r\n          config.headers.authorization = 'Bearer ' + jwt;\r\n        }\r\n        //return config\r\n        return config;\r\n      });\r\n    }\r\n\r\n\r\nexport default {authenticateUser,getUserName,isUserLoggedIn,removeUserDetails,storeUserDetails};\r\n\r\n","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\CitiesAPIService.js",["302","303"],"import axios from 'axios';\nimport { BASE_API } from '../constants/ApiConstant';\n\nconst CITIES_API_BASE_URL = 'http://localhost:8080';\n\nclass ApiService {\n\n    fetchCities() {\n        return axios.get(BASE_API+'/cities');\n    }\n\n}\n\nexport default new ApiService();","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\FlightAPIService.js",["304","305"],"import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport gql from \"graphql-tag\";\n\nconst FLIGHT_API_BASE_URL = \"http://localhost:8080\";\nconst token = sessionStorage.getItem(\"jwt_token\");\n\nconst GET_FLIGHTS = gql`query get_flights($fromCity: String!,$toCity: String!, $departureDate: String!) {\n  get_flights(fromCity: $fromCity, toCity: $toCity ,departureDate: $departureDate) {\n    id\n    airlineName\n    airlineNo\n    departureDate\n    arrivalDate\n    fromCity\n    toCity\n    departureTime\n    arrivalTime\n    capacity\n    availableSeats\n    economyFare\n    businessFare\n  }\n}`\n\nclass ApiService {\n  fetchFlightById(aid) {\n    return axios.get(BASE_API+\"/customer/select_flight\", {\n      params: { aid: aid }, headers: { Authorization: `Bearer ${token}`}\n    });\n  }\n\n  editFlight(flight) {\n    return axios.put(BASE_API+\"/manager/update_airline\", flight, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  getBookingsByFlightId(aid) {\n    return axios.get(BASE_API+\"/manager/get_bookings/\" + aid, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  getBookingsByUserId(uid){\n    return axios.get(BASE_API+'/customer/get_userbookings/' + uid, { headers: { Authorization: `Bearer ${token}`} })\n  }\n\n  cancelBookingByBookId(bid) {\n    return axios.delete(BASE_API+\"/manager/delete_booking\", {\n      params: { bid: bid }, headers: { Authorization: `Bearer ${token}`}\n    });\n  }\n\n  addAirline(flight) {\n    return axios.post(BASE_API+\"/admin/add_airline\", flight, { headers: { Authorization: `Bearer ${token}`} });\n  }\n  updateBooking(airlineId) {\n    console.log(airlineId);\n    return axios.put(BASE_API+\"/manager/update_booking/\" + airlineId, { headers: { Authorization: `Bearer ${token}`} });\n  }\n\n  cancelBookingByUserId(bId){\n    return axios.delete(BASE_API+'/customer/cancel_ticket' ,{ params: { bId : bId }, headers: { Authorization: `Bearer ${token}`} })\n}\n\n  getFlight(from, to, departure) {\n    //console.log(\"in get flight\"+fromCity + \"  \" + toCity + \"  \" + departureDate);\n    return axios.get(\n      BASE_API+\"/search_flight/\" + departure,\n      {\n        params: {\n          fromCity: from,\n          toCity: to,\n        },\n        headers: { Authorization: `Bearer ${token}`}\n      }\n    );\n  }\n\n  getFlightsGraphQL(fromCity, toCity, departureDate){\n    const response = axios.post(BASE_API+'/graphql', {\n      query: GET_FLIGHTS,\n      variables: {\n        fromCity,\n        toCity,\n        departureDate\n      },\n    });\n    return response.data.data.get_flights;\n  };\n\n  getAirlineNames(){\n    return axios.get(BASE_API+'/admin/airline_names', { headers: { Authorization: `Bearer ${token}`} })\n  }\n  addCities(cities){\n    console.log(\"add cities axios\");\n    return axios.put(BASE_API+'/admin/add_city', cities, { headers: { Authorization: `Bearer ${token}`} })\n  }\n}\n\nexport default new ApiService();\n","E:\\Final project\\Airline system-frontend - Copy\\src\\service\\UserAPIService.js",["306","307"],"import axios from 'axios';\nimport { BASE_API } from '../constants/ApiConstant';\n\nconst USER_API_BASE_URL = 'http://localhost:8080';\n\nconst token = sessionStorage.getItem(\"jwt_token\");\n\nclass ApiService {\n    \n\n    fetchUserById(userid) {\n        return axios.get(BASE_API+'/user/get_user/'+userid,{ headers: { Authorization: `Bearer ${token}`} } );\n    }\n\n    editUser(user, uid) {\n        return axios.put(BASE_API+'/user/edit_profile', user, { params: { uid : uid }, headers: { Authorization: `Bearer ${token}`} })\n    }\n    getbookingsByUserId(uid)\n    {\n        return axios.get(BASE_API+'/customer/get_userbookings/'+uid, { headers: { Authorization: `Bearer ${token}`} })\n    }\n    postFeedback(feedback, bid)\n    {\n        return axios.put(BASE_API+'/customer/post_feedback', feedback, { params: { bid : bid }, headers: { Authorization: `Bearer ${token}`} } )\n    }\n\n    bookTicket(book){\n        return axios.post(BASE_API+'/customer/book-ticket', book, { headers: { Authorization: `Bearer ${token}`} })\n    }\n}\n\nexport default new ApiService();","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\userActions.js",["308"],"import {\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_SIGNUP_FAIL,\n  USER_SIGNUP_REQUEST,\n  USER_SIGNUP_SUCCESS,\n} from '../constants/userConstants'\nimport axios from 'axios'\nimport { BASE_API } from '../constants/ApiConstant'\nimport AuthenticationService from '../service/AuthenticationService'\n\nexport const logout = () => {\n  return (dispatch) => {\n    sessionStorage.removeItem('token')\n    dispatch({ type: USER_SIGNOUT })\n    document.location.href = '/signin'\n  }\n}\n\nexport const signup = (firstName, lastName, email, password, mobileNo, status, roles) => {\n  return (dispatch) => {\n    dispatch({\n      type: USER_SIGNUP_REQUEST,\n    })\n\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const body = {\n      firstName,\n      lastName,\n      email,\n      password,\n      mobileNo,\n      status,\n      roles\n    }\n    // const url = BASE_API+'/user/signup'\n    const url = BASE_API+'/api/signup'\n    axios\n      .post(url, body, header)\n      .then((response) => {\n        dispatch({\n          type: USER_SIGNUP_SUCCESS,\n          payload: response.data,\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: USER_SIGNUP_FAIL,\n          payload: error,\n        })\n      })\n  }\n}\n\nexport const signin = (email, password) => {\n  return (dispatch) => {\n    dispatch({\n      type: USER_SIGNIN_REQUEST,\n    })\n\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const body = {\n      email,\n      password,\n    }\n    const url = BASE_API+'/user/login'\n    // const url = BASE_API+'/api/signin'\n    axios\n      .post(url, body, header)\n      .then((response) => {\n          //   AuthenticationService.authenticateUser(email, password)\n          // .then((response) => {\n          //   console.log(\"auth success\", response);\n          //   AuthenticationService.storeUserDetails(email, response.data.jwt);\n          //   console.log(\"welcome\");\n          //   // setlogin(true);\n          //   // setauthenticated(true);\n          //   // navigation(`/home/${userName}`);\n          // })\n          // .catch((error) => {\n          //   // swal(\"Oops\", \"Wrong username or password\", \"error\");\n          //   console.log(\"auth failed \", error.message);\n          // });\n        dispatch({\n          type: USER_SIGNIN_SUCCESS,\n          payload: response.data,\n        })\n      })\n      .catch((error) => {\n        console.log(\"in catch error\");\n        dispatch({\n          type: USER_SIGNIN_FAIL,\n          payload: error,\n        })\n      })\n  }\n}\n","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\flightActions.js",["309","310","311","312","313","314"],"import axios from \"axios\";\nimport { BASE_API } from \"../constants/ApiConstant\";\nimport {\n    FLIGHT_FETCH_REQUEST,\n    FLIGHT_FETCH_SUCCESS,\n    FLIGHT_FETCH_FAIL,\n    FLIGHT_FETCH_RESET,\n    FLIGHT_ADD_REQUEST,\n    FLIGHT_ADD_SUCCESS,\n    FLIGHT_ADD_FAIL,\n    FLIGHT_ADD_RESET,\n    FLIGHT_CANCEL_REQUEST,\n    FLIGHT_CANCEL_SUCCESS,\n    FLIGHT_CANCEL_FAIL,\n    FLIGHT_CANCEL_RESET\n  } from \"../constants/flightConstants\";\n\n  // { headers: { Authorization: `Bearer ${token}`} }\nconst token = sessionStorage.getItem(\"jwt_token\");\n  export const getFlights = () => {\n    return (dispatch) => {\n      dispatch({\n        type: FLIGHT_FETCH_REQUEST,\n      });\n  \n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}`\n        }, \n      };\n      \n      const url = BASE_API+\"/manager/get_flights\";\n      axios\n        .get(url, header)\n        .then((response) => {\n          dispatch({\n            type: FLIGHT_FETCH_SUCCESS,\n            payload: response.data,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: FLIGHT_FETCH_FAIL,\n            payload: error,\n          });\n        });\n    };\n  };\n  export const cancelFlight=(flight_id)=>{\n    return (dispatch) => {\n      dispatch({\n        type: FLIGHT_CANCEL_REQUEST,\n      });\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}`\n        },\n      };\n     \n     \n      const url = BASE_API+\"/manager/cancel_flight/\"+flight_id;\n      axios.delete(url, header)\n      .then((response) => {\n        dispatch({\n          type: FLIGHT_CANCEL_SUCCESS,\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: FLIGHT_CANCEL_FAIL,\n          payload: error,\n        });\n      });\n    }\n  }","E:\\Final project\\Airline system-frontend - Copy\\src\\actions\\AdminActions.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\AdminConstants.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\userConstants.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\flightConstants.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\constants\\ApiConstant.js",[],"E:\\Final project\\Airline system-frontend - Copy\\src\\service\\http-common.js",[],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":130,"column":39,"nodeType":"321","messageId":"322","endLine":130,"endColumn":41},{"ruleId":"319","severity":1,"message":"320","line":218,"column":36,"nodeType":"321","messageId":"322","endLine":218,"endColumn":38},{"ruleId":"319","severity":1,"message":"320","line":222,"column":29,"nodeType":"321","messageId":"322","endLine":222,"endColumn":31},{"ruleId":"323","severity":1,"message":"324","line":416,"column":27,"nodeType":"325","endLine":416,"endColumn":38},{"ruleId":"326","severity":1,"message":"327","line":5,"column":8,"nodeType":"328","messageId":"329","endLine":5,"endColumn":17},{"ruleId":"326","severity":1,"message":"330","line":8,"column":8,"nodeType":"328","messageId":"329","endLine":8,"endColumn":14},{"ruleId":"326","severity":1,"message":"331","line":42,"column":9,"nodeType":"328","messageId":"329","endLine":42,"endColumn":23},{"ruleId":"332","severity":1,"message":"333","line":187,"column":6,"nodeType":"334","endLine":187,"endColumn":32,"suggestions":"335"},{"ruleId":"323","severity":1,"message":"324","line":324,"column":27,"nodeType":"325","endLine":324,"endColumn":38},{"ruleId":"336","severity":1,"message":"337","line":437,"column":21,"nodeType":"338","endLine":437,"endColumn":229},{"ruleId":"336","severity":1,"message":"337","line":448,"column":21,"nodeType":"338","endLine":448,"endColumn":121},{"ruleId":"336","severity":1,"message":"337","line":458,"column":21,"nodeType":"338","endLine":458,"endColumn":201},{"ruleId":"326","severity":1,"message":"339","line":9,"column":11,"nodeType":"328","messageId":"329","endLine":9,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":9,"column":20,"nodeType":"328","messageId":"329","endLine":9,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":13,"column":6,"nodeType":"334","endLine":13,"endColumn":8,"suggestions":"342"},{"ruleId":"323","severity":1,"message":"324","line":43,"column":23,"nodeType":"325","endLine":43,"endColumn":34},{"ruleId":"326","severity":1,"message":"339","line":9,"column":11,"nodeType":"328","messageId":"329","endLine":9,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":9,"column":20,"nodeType":"328","messageId":"329","endLine":9,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":13,"column":6,"nodeType":"334","endLine":13,"endColumn":8,"suggestions":"343"},{"ruleId":"323","severity":1,"message":"324","line":37,"column":21,"nodeType":"325","endLine":37,"endColumn":32},{"ruleId":"326","severity":1,"message":"344","line":6,"column":8,"nodeType":"328","messageId":"329","endLine":6,"endColumn":13},{"ruleId":"326","severity":1,"message":"345","line":13,"column":18,"nodeType":"328","messageId":"329","endLine":13,"endColumn":27},{"ruleId":"332","severity":1,"message":"346","line":55,"column":6,"nodeType":"334","endLine":55,"endColumn":32,"suggestions":"347"},{"ruleId":"326","severity":1,"message":"344","line":5,"column":8,"nodeType":"328","messageId":"329","endLine":5,"endColumn":13},{"ruleId":"326","severity":1,"message":"345","line":13,"column":20,"nodeType":"328","messageId":"329","endLine":13,"endColumn":29},{"ruleId":"326","severity":1,"message":"348","line":14,"column":19,"nodeType":"328","messageId":"329","endLine":14,"endColumn":27},{"ruleId":"332","severity":1,"message":"349","line":65,"column":12,"nodeType":"334","endLine":65,"endColumn":38,"suggestions":"350"},{"ruleId":"326","severity":1,"message":"339","line":10,"column":11,"nodeType":"328","messageId":"329","endLine":10,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":10,"column":20,"nodeType":"328","messageId":"329","endLine":10,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":14,"column":6,"nodeType":"334","endLine":14,"endColumn":8,"suggestions":"351"},{"ruleId":"323","severity":1,"message":"324","line":48,"column":21,"nodeType":"325","endLine":48,"endColumn":32},{"ruleId":"326","severity":1,"message":"339","line":9,"column":11,"nodeType":"328","messageId":"329","endLine":9,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":9,"column":20,"nodeType":"328","messageId":"329","endLine":9,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":13,"column":6,"nodeType":"334","endLine":13,"endColumn":8,"suggestions":"352"},{"ruleId":"323","severity":1,"message":"324","line":43,"column":23,"nodeType":"325","endLine":43,"endColumn":34},{"ruleId":"319","severity":1,"message":"320","line":25,"column":27,"nodeType":"321","messageId":"322","endLine":25,"endColumn":29},{"ruleId":"323","severity":1,"message":"324","line":54,"column":21,"nodeType":"325","endLine":54,"endColumn":32},{"ruleId":"319","severity":1,"message":"320","line":23,"column":31,"nodeType":"321","messageId":"322","endLine":23,"endColumn":33},{"ruleId":"319","severity":1,"message":"320","line":36,"column":29,"nodeType":"321","messageId":"322","endLine":36,"endColumn":31},{"ruleId":"319","severity":1,"message":"320","line":22,"column":35,"nodeType":"321","messageId":"322","endLine":22,"endColumn":37},{"ruleId":"326","severity":1,"message":"330","line":4,"column":8,"nodeType":"328","messageId":"329","endLine":4,"endColumn":14},{"ruleId":"326","severity":1,"message":"339","line":9,"column":11,"nodeType":"328","messageId":"329","endLine":9,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":9,"column":20,"nodeType":"328","messageId":"329","endLine":9,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":12,"column":6,"nodeType":"334","endLine":12,"endColumn":8,"suggestions":"353"},{"ruleId":"323","severity":1,"message":"324","line":90,"column":25,"nodeType":"325","endLine":90,"endColumn":36},{"ruleId":"319","severity":1,"message":"320","line":20,"column":31,"nodeType":"321","messageId":"322","endLine":20,"endColumn":33},{"ruleId":"319","severity":1,"message":"320","line":59,"column":32,"nodeType":"321","messageId":"322","endLine":59,"endColumn":34},{"ruleId":"319","severity":1,"message":"320","line":60,"column":32,"nodeType":"321","messageId":"322","endLine":60,"endColumn":34},{"ruleId":"319","severity":1,"message":"320","line":63,"column":48,"nodeType":"321","messageId":"322","endLine":63,"endColumn":50},{"ruleId":"319","severity":1,"message":"320","line":65,"column":48,"nodeType":"321","messageId":"322","endLine":65,"endColumn":50},{"ruleId":"319","severity":1,"message":"320","line":67,"column":48,"nodeType":"321","messageId":"322","endLine":67,"endColumn":50},{"ruleId":"336","severity":1,"message":"337","line":80,"column":17,"nodeType":"338","endLine":84,"endColumn":19},{"ruleId":"319","severity":1,"message":"320","line":21,"column":27,"nodeType":"321","messageId":"322","endLine":21,"endColumn":29},{"ruleId":"323","severity":1,"message":"324","line":54,"column":21,"nodeType":"325","endLine":54,"endColumn":32},{"ruleId":"326","severity":1,"message":"354","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":26},{"ruleId":"355","severity":1,"message":"356","line":32,"column":15,"nodeType":"338","endLine":32,"endColumn":170},{"ruleId":"326","severity":1,"message":"339","line":9,"column":11,"nodeType":"328","messageId":"329","endLine":9,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":9,"column":20,"nodeType":"328","messageId":"329","endLine":9,"endColumn":25},{"ruleId":"332","severity":1,"message":"341","line":13,"column":6,"nodeType":"334","endLine":13,"endColumn":8,"suggestions":"357"},{"ruleId":"323","severity":1,"message":"324","line":43,"column":23,"nodeType":"325","endLine":43,"endColumn":34},{"ruleId":"326","severity":1,"message":"358","line":1,"column":10,"nodeType":"328","messageId":"329","endLine":1,"endColumn":14},{"ruleId":"336","severity":1,"message":"337","line":38,"column":15,"nodeType":"338","endLine":38,"endColumn":71},{"ruleId":"319","severity":1,"message":"320","line":30,"column":31,"nodeType":"321","messageId":"322","endLine":30,"endColumn":33},{"ruleId":"319","severity":1,"message":"320","line":46,"column":29,"nodeType":"321","messageId":"322","endLine":46,"endColumn":31},{"ruleId":"326","severity":1,"message":"339","line":10,"column":11,"nodeType":"328","messageId":"329","endLine":10,"endColumn":18},{"ruleId":"326","severity":1,"message":"340","line":10,"column":20,"nodeType":"328","messageId":"329","endLine":10,"endColumn":25},{"ruleId":"326","severity":1,"message":"359","line":10,"column":27,"nodeType":"328","messageId":"329","endLine":10,"endColumn":35},{"ruleId":"326","severity":1,"message":"360","line":12,"column":15,"nodeType":"328","messageId":"329","endLine":12,"endColumn":22},{"ruleId":"319","severity":1,"message":"320","line":53,"column":49,"nodeType":"321","messageId":"322","endLine":53,"endColumn":51},{"ruleId":"319","severity":1,"message":"320","line":59,"column":49,"nodeType":"321","messageId":"322","endLine":59,"endColumn":51},{"ruleId":"319","severity":1,"message":"320","line":65,"column":49,"nodeType":"321","messageId":"322","endLine":65,"endColumn":51},{"ruleId":"319","severity":1,"message":"320","line":98,"column":47,"nodeType":"321","messageId":"322","endLine":98,"endColumn":49},{"ruleId":"319","severity":1,"message":"320","line":153,"column":47,"nodeType":"321","messageId":"322","endLine":153,"endColumn":49},{"ruleId":"319","severity":1,"message":"320","line":200,"column":47,"nodeType":"321","messageId":"322","endLine":200,"endColumn":49},{"ruleId":"326","severity":1,"message":"361","line":6,"column":3,"nodeType":"328","messageId":"329","endLine":6,"endColumn":21},{"ruleId":"326","severity":1,"message":"362","line":7,"column":3,"nodeType":"328","messageId":"329","endLine":7,"endColumn":21},{"ruleId":"326","severity":1,"message":"363","line":8,"column":3,"nodeType":"328","messageId":"329","endLine":8,"endColumn":18},{"ruleId":"326","severity":1,"message":"364","line":9,"column":3,"nodeType":"328","messageId":"329","endLine":9,"endColumn":19},{"ruleId":"326","severity":1,"message":"365","line":3,"column":7,"nodeType":"328","messageId":"329","endLine":3,"endColumn":27},{"ruleId":"366","severity":1,"message":"367","line":12,"column":1,"nodeType":"368","endLine":12,"endColumn":33},{"ruleId":"326","severity":1,"message":"369","line":2,"column":8,"nodeType":"328","messageId":"329","endLine":2,"endColumn":10},{"ruleId":"326","severity":1,"message":"370","line":4,"column":7,"nodeType":"328","messageId":"329","endLine":4,"endColumn":30},{"ruleId":"366","severity":1,"message":"367","line":24,"column":1,"nodeType":"368","endLine":24,"endColumn":33},{"ruleId":"326","severity":1,"message":"371","line":40,"column":11,"nodeType":"328","messageId":"329","endLine":40,"endColumn":34},{"ruleId":"366","severity":1,"message":"372","line":53,"column":1,"nodeType":"368","endLine":53,"endColumn":97},{"ruleId":"326","severity":1,"message":"373","line":4,"column":7,"nodeType":"328","messageId":"329","endLine":4,"endColumn":26},{"ruleId":"366","severity":1,"message":"367","line":14,"column":1,"nodeType":"368","endLine":14,"endColumn":33},{"ruleId":"326","severity":1,"message":"374","line":5,"column":7,"nodeType":"328","messageId":"329","endLine":5,"endColumn":26},{"ruleId":"366","severity":1,"message":"367","line":98,"column":1,"nodeType":"368","endLine":98,"endColumn":33},{"ruleId":"326","severity":1,"message":"375","line":4,"column":7,"nodeType":"328","messageId":"329","endLine":4,"endColumn":24},{"ruleId":"366","severity":1,"message":"367","line":32,"column":1,"nodeType":"368","endLine":32,"endColumn":33},{"ruleId":"326","severity":1,"message":"376","line":12,"column":8,"nodeType":"328","messageId":"329","endLine":12,"endColumn":29},{"ruleId":"326","severity":1,"message":"377","line":7,"column":5,"nodeType":"328","messageId":"329","endLine":7,"endColumn":23},{"ruleId":"326","severity":1,"message":"361","line":8,"column":5,"nodeType":"328","messageId":"329","endLine":8,"endColumn":23},{"ruleId":"326","severity":1,"message":"362","line":9,"column":5,"nodeType":"328","messageId":"329","endLine":9,"endColumn":23},{"ruleId":"326","severity":1,"message":"363","line":10,"column":5,"nodeType":"328","messageId":"329","endLine":10,"endColumn":20},{"ruleId":"326","severity":1,"message":"364","line":11,"column":5,"nodeType":"328","messageId":"329","endLine":11,"endColumn":21},{"ruleId":"326","severity":1,"message":"378","line":15,"column":5,"nodeType":"328","messageId":"329","endLine":15,"endColumn":24},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-unused-vars","'ReCAPTCHA' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'handleonChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'historyHook', 'loadCities', and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["381"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["382"],["383"],"'store' is defined but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["384"],"'setRoles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["385"],["386"],["387"],["388"],"'Component' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["389"],"'Link' is defined but never used.","'response' is assigned a value but never used.","'SetRole' is assigned a value but never used.","'FLIGHT_ADD_REQUEST' is defined but never used.","'FLIGHT_ADD_SUCCESS' is defined but never used.","'FLIGHT_ADD_FAIL' is defined but never used.","'FLIGHT_ADD_RESET' is defined but never used.","'MANAGER_API_BASE_URL' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'qs' is defined but never used.","'SUPERADMIN_API_BASE_URL' is assigned a value but never used.","'setupRequestInterceptor' is assigned a value but never used.","Assign object to a variable before exporting as module default","'CITIES_API_BASE_URL' is assigned a value but never used.","'FLIGHT_API_BASE_URL' is assigned a value but never used.","'USER_API_BASE_URL' is assigned a value but never used.","'AuthenticationService' is defined but never used.","'FLIGHT_FETCH_RESET' is defined but never used.","'FLIGHT_CANCEL_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"392","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"392","fix":"399"},{"desc":"392","fix":"400"},{"desc":"392","fix":"401"},{"desc":"392","fix":"402"},"Update the dependencies array to be: [loading, error, response, loadCities, historyHook, props.history]",{"range":"403","text":"404"},"Update the dependencies array to be: [dispatch]",{"range":"405","text":"406"},{"range":"407","text":"406"},"Update the dependencies array to be: [loading, error, response, props.history, dispatch]",{"range":"408","text":"409"},"Update the dependencies array to be: [loading, error, response, props.history]",{"range":"410","text":"411"},{"range":"412","text":"406"},{"range":"413","text":"406"},{"range":"414","text":"406"},{"range":"415","text":"406"},[5961,5987],"[loading, error, response, loadCities, historyHook, props.history]",[427,429],"[dispatch]",[474,476],[2103,2129],"[loading, error, response, props.history, dispatch]",[2241,2267],"[loading, error, response, props.history]",[500,502],[428,430],[430,432],[427,429]]